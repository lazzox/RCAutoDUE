

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Feb 08 19:10:08 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F689
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  008C                     	;# 
    50  008D                     	;# 
    51  008E                     	;# 
    52  008F                     	;# 
    53  0090                     	;# 
    54  0093                     	;# 
    55  0093                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0095                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0096                     	;# 
    62  0097                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009A                     	;# 
    66  009B                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011E                     	;# 
    81  011F                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  019E                     	;# 
    85                           
    86                           	psect	idataBANK0
    87  01A8                     __pidataBANK0:	
    88                           
    89                           ;initializer for _receivedData
    90  01A8  3430               	retlw	48
    91  01A9  3400               	retlw	0
    92  01AA  3400               	retlw	0
    93  01AB  3400               	retlw	0
    94  01AC  3400               	retlw	0
    95  01AD  3400               	retlw	0
    96  01AE  3400               	retlw	0
    97  01AF  3400               	retlw	0
    98  01B0  3400               	retlw	0
    99  01B1  3400               	retlw	0
   100  01B2  3400               	retlw	0
   101  01B3  3400               	retlw	0
   102  01B4  3400               	retlw	0
   103  01B5  3400               	retlw	0
   104  01B6  3400               	retlw	0
   105  001F                     _ADCON0bits	set	31
   106  000B                     _INTCON	set	11
   107  0005                     _PORTA	set	5
   108  0005                     _PORTAbits	set	5
   109  0006                     _PORTB	set	6
   110  0007                     _PORTC	set	7
   111  0007                     _PORTCbits	set	7
   112  001A                     _RCREG	set	26
   113  0010                     _T1CON	set	16
   114  0001                     _TMR0	set	1
   115  000F                     _TMR1H	set	15
   116  000E                     _TMR1L	set	14
   117  0019                     _TXREG	set	25
   118  00C4                     _CREN	set	196
   119  005F                     _GIE	set	95
   120  005E                     _PEIE	set	94
   121  0065                     _RCIF	set	101
   122  00C7                     _SPEN	set	199
   123  005A                     _T0IF	set	90
   124  0060                     _TMR1IF	set	96
   125  0080                     _TMR1ON	set	128
   126  0081                     _OPTION_REG	set	129
   127  0099                     _SPBRG	set	153
   128  0085                     _TRISA	set	133
   129  0086                     _TRISB	set	134
   130  0087                     _TRISC	set	135
   131  04C2                     _BRGH	set	1218
   132  0465                     _RCIE	set	1125
   133  04C4                     _SYNC	set	1220
   134  0460                     _TMR1IE	set	1120
   135  0435                     _TRISB5	set	1077
   136  0437                     _TRISB7	set	1079
   137  04C1                     _TRMT	set	1217
   138  04C5                     _TXEN	set	1221
   139  011E                     _ANSEL	set	286
   140  011F                     _ANSELH	set	287
   141                           
   142                           	psect	strings
   143  01B7                     __pstrings:	
   144  01B7                     stringtab:	
   145  01B7                     __stringtab:	
   146  01B7                     stringcode:	
   147                           ;	String table - string pointers are 1 byte each
   148                           
   149  01B7                     stringdir:	
   150  01B7  3001               	movlw	high stringdir
   151  01B8  008A               	movwf	10
   152  01B9  0804               	movf	4,w
   153  01BA  0A84               	incf	4,f
   154  01BB  0782               	addwf	2,f
   155  01BC                     __stringbase:	
   156  01BC  3400               	retlw	0
   157  01BD                     __end_of__stringtab:	
   158  01BD                     STR_1:	
   159  01BD  3445               	retlw	69	;'E'
   160  01BE  3452               	retlw	82	;'R'
   161  01BF  3452               	retlw	82	;'R'
   162  01C0  344F               	retlw	79	;'O'
   163  01C1  3452               	retlw	82	;'R'
   164  01C2  3431               	retlw	49	;'1'
   165  01C3  3400               	retlw	0
   166                           
   167                           ; #config settings
   168  0000                     
   169                           	psect	cinit
   170  0013                     start_initialization:	
   171  0013                     __initialization:	
   172                           
   173                           ; Clear objects allocated to COMMON
   174  0013  01F5               	clrf	__pbssCOMMON& (0+127)
   175  0014  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   176  0015  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   177  0016  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   178                           
   179                           ; Initialize objects allocated to BANK0
   180  0017  1383               	bcf	3,7	;select IRP bank0
   181  0018  302F               	movlw	low (__pdataBANK0+15)
   182  0019  00FD               	movwf	btemp+-1
   183  001A  3001               	movlw	high __pidataBANK0
   184  001B  00FE               	movwf	btemp
   185  001C  30A8               	movlw	low __pidataBANK0
   186  001D  00FF               	movwf	btemp+1
   187  001E  3020               	movlw	low __pdataBANK0
   188  001F  0084               	movwf	4
   189  0020  118A  219C         	fcall	init_ram0
   190  0022                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  0022                     __end_of__initialization:	
   194  0022  0183               	clrf	3
   195  0023  118A  2825         	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198  0075                     __pbssCOMMON:	
   199  0075                     _i:	
   200  0075                     	ds	2
   201  0077                     _newData:	
   202  0077                     	ds	1
   203  0078                     _tmpChar:	
   204  0078                     	ds	1
   205                           
   206                           	psect	dataBANK0
   207  0020                     __pdataBANK0:	
   208  0020                     _receivedData:	
   209  0020                     	ds	15
   210                           
   211                           	psect	inittext
   212  0198                     init_fetch0:	
   213                           ;	Called with low address in FSR and high address in W
   214                           
   215  0198  087E               	movf	126,w
   216  0199  008A               	movwf	10
   217  019A  087F               	movf	127,w
   218  019B  0082               	movwf	2
   219  019C                     init_ram0:	
   220                           ;Called with:
   221                           ;	high address of idata address in btemp 
   222                           ;	low address of idata address in btemp+1 
   223                           ;	low address of data in FSR
   224                           ;	high address + 1 of data in btemp-1
   225                           
   226  019C  2198  118A         	fcall	init_fetch0
   227  019E  0080               	movwf	0
   228  019F  0A84               	incf	4,f
   229  01A0  0804               	movf	4,w
   230  01A1  067D               	xorwf	125,w
   231  01A2  1903               	btfsc	3,2
   232  01A3  3400               	retlw	0
   233  01A4  0AFF               	incf	127,f
   234  01A5  1903               	btfsc	3,2
   235  01A6  0AFE               	incf	126,f
   236  01A7  299C               	goto	init_ram0
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_UART_Init9600:	
   241  0070                     ?_UART_Write:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_UART_Write_Text:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_tc_int:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_tc_int:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_setHBridge:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_InitTimer1:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_InitTimer0:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267  0070                     	ds	5
   268  0075                     ??_UART_Init9600:	
   269  0075                     ??_UART_Write:	
   270                           ; 1 bytes @ 0x5
   271                           
   272  0075                     ??_UART_Write_Text:	
   273                           ; 1 bytes @ 0x5
   274                           
   275                           
   276                           	psect	cstackBANK0
   277  002F                     __pcstackBANK0:	
   278                           ; 1 bytes @ 0x5
   279                           
   280  002F                     ??_InitTimer1:	
   281  002F                     ??_InitTimer0:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  002F                     UART_Write@data:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  002F                     	ds	1
   290  0030                     UART_Write_Text@text:	
   291                           
   292                           ; 1 bytes @ 0x1
   293  0030                     	ds	1
   294  0031                     UART_Write_Text@i:	
   295                           
   296                           ; 2 bytes @ 0x2
   297  0031                     	ds	2
   298  0033                     ??_setHBridge:	
   299                           
   300                           ; 1 bytes @ 0x4
   301  0033                     	ds	1
   302  0034                     ??_main:	
   303                           
   304                           ; 1 bytes @ 0x5
   305  0034                     	ds	3
   306                           
   307                           	psect	maintext
   308  0025                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 183 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   328 ;;      Params:         0       0       0       0
   329 ;;      Locals:         0       0       0       0
   330 ;;      Temps:          0       3       0       0
   331 ;;      Totals:         0       3       0       0
   332 ;;Total ram usage:        3 bytes
   333 ;; Hardware stack levels required when called:    4
   334 ;; This function calls:
   335 ;;		_InitTimer0
   336 ;;		_InitTimer1
   337 ;;		_UART_Init9600
   338 ;;		_UART_Write
   339 ;;		_setHBridge
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _main
   347  0025                     _main:	
   348                           
   349                           ;main.c: 186: ANSEL = 0b00000000;
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   353  0025  1283               	bcf	3,5	;RP0=0, select bank2
   354  0026  1703               	bsf	3,6	;RP1=1, select bank2
   355  0027  019E               	clrf	30	;volatile
   356                           
   357                           ;main.c: 187: ANSELH = 0;
   358  0028  019F               	clrf	31	;volatile
   359                           
   360                           ;main.c: 188: ADCON0bits.ADON = 0;
   361  0029  1283               	bcf	3,5	;RP0=0, select bank0
   362  002A  1303               	bcf	3,6	;RP1=0, select bank0
   363  002B  101F               	bcf	31,0	;volatile
   364                           
   365                           ;main.c: 191: TRISA = 0x00;
   366  002C  1683               	bsf	3,5	;RP0=1, select bank1
   367  002D  1303               	bcf	3,6	;RP1=0, select bank1
   368  002E  0185               	clrf	5	;volatile
   369                           
   370                           ;main.c: 192: TRISB = 0x00;
   371  002F  0186               	clrf	6	;volatile
   372                           
   373                           ;main.c: 193: TRISC = 0x00;
   374  0030  0187               	clrf	7	;volatile
   375                           
   376                           ;main.c: 195: PORTA = 0x00;
   377  0031  1283               	bcf	3,5	;RP0=0, select bank0
   378  0032  1303               	bcf	3,6	;RP1=0, select bank0
   379  0033  0185               	clrf	5	;volatile
   380                           
   381                           ;main.c: 196: PORTB = 0x00;
   382  0034  0186               	clrf	6	;volatile
   383                           
   384                           ;main.c: 197: PORTC = 0x00;
   385  0035  0187               	clrf	7	;volatile
   386                           
   387                           ;main.c: 198: PORTAbits.RA2 = 1;
   388  0036  1505               	bsf	5,2	;volatile
   389                           
   390                           ;main.c: 199: _delay((unsigned long)((2000)*(4000000/4000.0)));
   391  0037  300B               	movlw	11
   392  0038  00B6               	movwf	??_main+2
   393  0039  3026               	movlw	38
   394  003A  00B5               	movwf	??_main+1
   395  003B  3066               	movlw	102
   396  003C  00B4               	movwf	??_main
   397  003D                     u767:	
   398  003D  0BB4               	decfsz	??_main,f
   399  003E  283D               	goto	u767
   400  003F  0BB5               	decfsz	??_main+1,f
   401  0040  283D               	goto	u767
   402  0041  0BB6               	decfsz	??_main+2,f
   403  0042  283D               	goto	u767
   404  0043  2844               	nop2
   405                           
   406                           ;main.c: 200: PORTAbits.RA2 = 0;
   407  0044  1283               	bcf	3,5	;RP0=0, select bank0
   408  0045  1303               	bcf	3,6	;RP1=0, select bank0
   409  0046  1105               	bcf	5,2	;volatile
   410                           
   411                           ;main.c: 202: InitTimer0();
   412  0047  118A  21C4  118A   	fcall	_InitTimer0
   413                           
   414                           ;main.c: 203: InitTimer1();
   415  004A  118A  2185  118A   	fcall	_InitTimer1
   416                           
   417                           ;main.c: 211: UART_Init9600();
   418  004D  118A  216F  118A   	fcall	_UART_Init9600
   419                           
   420                           ;main.c: 212: GIE = 1;
   421  0050  178B               	bsf	11,7	;volatile
   422                           
   423                           ;main.c: 215: PORTCbits.RC1 = 0;
   424  0051  1283               	bcf	3,5	;RP0=0, select bank0
   425  0052  1303               	bcf	3,6	;RP1=0, select bank0
   426  0053  1087               	bcf	7,1	;volatile
   427                           
   428                           ;main.c: 216: PORTCbits.RC6 = 0;
   429  0054  1307               	bcf	7,6	;volatile
   430                           
   431                           ;main.c: 217: PORTCbits.RC7 = 0;
   432  0055  1387               	bcf	7,7	;volatile
   433                           
   434                           ;main.c: 218: PORTCbits.RC3 = 0;
   435  0056  1187               	bcf	7,3	;volatile
   436  0057                     l1104:	
   437                           ;main.c: 221: while(1){
   438                           
   439                           
   440                           ;main.c: 222: if(newData){
   441  0057  0877               	movf	_newData,w
   442  0058  1903               	btfsc	3,2
   443  0059  2857               	goto	l1104
   444                           
   445                           ;main.c: 225: UART_Write(receivedData[0]);
   446  005A  1283               	bcf	3,5	;RP0=0, select bank0
   447  005B  1303               	bcf	3,6	;RP1=0, select bank0
   448  005C  0820               	movf	_receivedData,w
   449  005D  118A  21D1  118A   	fcall	_UART_Write
   450                           
   451                           ;main.c: 226: UART_Write(receivedData[1]);
   452  0060  1283               	bcf	3,5	;RP0=0, select bank0
   453  0061  1303               	bcf	3,6	;RP1=0, select bank0
   454  0062  0821               	movf	_receivedData+1,w
   455  0063  118A  21D1  118A   	fcall	_UART_Write
   456                           
   457                           ;main.c: 227: UART_Write(receivedData[2]);
   458  0066  1283               	bcf	3,5	;RP0=0, select bank0
   459  0067  1303               	bcf	3,6	;RP1=0, select bank0
   460  0068  0822               	movf	_receivedData+2,w
   461  0069  118A  21D1  118A   	fcall	_UART_Write
   462                           
   463                           ;main.c: 228: UART_Write(receivedData[3]);
   464  006C  1283               	bcf	3,5	;RP0=0, select bank0
   465  006D  1303               	bcf	3,6	;RP1=0, select bank0
   466  006E  0823               	movf	_receivedData+3,w
   467  006F  118A  21D1  118A   	fcall	_UART_Write
   468                           
   469                           ;main.c: 229: UART_Write(receivedData[4]);
   470  0072  1283               	bcf	3,5	;RP0=0, select bank0
   471  0073  1303               	bcf	3,6	;RP1=0, select bank0
   472  0074  0824               	movf	_receivedData+4,w
   473  0075  118A  21D1  118A   	fcall	_UART_Write
   474                           
   475                           ;main.c: 230: setHBridge();
   476  0078  118A  20FC  118A   	fcall	_setHBridge
   477                           
   478                           ;main.c: 231: newData = 0;
   479  007B  01F7               	clrf	_newData
   480  007C  2857               	goto	l1104
   481                           
   482                           ;main.c: 252: _delay((unsigned long)((500)*(4000000/4000.0)));
   483                           
   484                           ;main.c: 251: PORTCbits.RC6 = 1;
   485                           
   486                           ;main.c: 250: PORTCbits.RC3 = 1;
   487                           
   488                           ;main.c: 249: PORTCbits.RC7 = 0;
   489                           
   490                           ;main.c: 244: }
   491                           ;main.c: 246: }
   492                           ;main.c: 248: while(0){
   493                           
   494                           ;main.c: 243: PORTCbits.RC6 = 1;
   495                           
   496                           ;main.c: 242: PORTCbits.RC3 = ~PORTCbits.RC3;
   497                           
   498                           ;main.c: 241: PORTCbits.RC7 = ~PORTCbits.RC7;
   499                           
   500                           ;main.c: 240: PORTCbits.RC6 = 0;
   501                           
   502                           ;main.c: 238: {
   503                           ;main.c: 239: i=0;
   504                           
   505                           ;main.c: 236: {
   506                           ;main.c: 237: if(i>= 5000)
   507                           
   508                           ;main.c: 232: }
   509                           ;main.c: 233: }
   510                           ;main.c: 235: while(0)
   511  007D  3003               	movlw	3
   512  007E  00B6               	movwf	??_main+2
   513  007F  308A               	movlw	138
   514  0080  00B5               	movwf	??_main+1
   515  0081  3056               	movlw	86
   516  0082  00B4               	movwf	??_main
   517  0083                     u777:	
   518  0083  0BB4               	decfsz	??_main,f
   519  0084  2883               	goto	u777
   520  0085  0BB5               	decfsz	??_main+1,f
   521  0086  2883               	goto	u777
   522  0087  0BB6               	decfsz	??_main+2,f
   523  0088  2883               	goto	u777
   524  0089  288A               	nop2
   525                           
   526                           ;main.c: 253: PORTCbits.RC6 = 0;
   527  008A  1283               	bcf	3,5	;RP0=0, select bank0
   528  008B  1303               	bcf	3,6	;RP1=0, select bank0
   529  008C  1307               	bcf	7,6	;volatile
   530                           
   531                           ;main.c: 254: PORTCbits.RC7 = 1;
   532  008D  1787               	bsf	7,7	;volatile
   533                           
   534                           ;main.c: 255: PORTCbits.RC3 = 0;
   535  008E  1187               	bcf	7,3	;volatile
   536                           
   537                           ;main.c: 256: PORTCbits.RC6 = 1;
   538  008F  1707               	bsf	7,6	;volatile
   539                           
   540                           ;main.c: 257: _delay((unsigned long)((500)*(4000000/4000.0)));
   541  0090  3003               	movlw	3
   542  0091  00B6               	movwf	??_main+2
   543  0092  308A               	movlw	138
   544  0093  00B5               	movwf	??_main+1
   545  0094  3056               	movlw	86
   546  0095  00B4               	movwf	??_main
   547  0096                     u787:	
   548  0096  0BB4               	decfsz	??_main,f
   549  0097  2896               	goto	u787
   550  0098  0BB5               	decfsz	??_main+1,f
   551  0099  2896               	goto	u787
   552  009A  0BB6               	decfsz	??_main+2,f
   553  009B  2896               	goto	u787
   554  009C  289D               	nop2
   555                           
   556                           ;main.c: 258: PORTCbits.RC6 = 0;
   557  009D  1283               	bcf	3,5	;RP0=0, select bank0
   558  009E  1303               	bcf	3,6	;RP1=0, select bank0
   559                           
   560                           ;main.c: 273: PORTCbits.RC6 = 0;
   561                           
   562                           ;main.c: 272: PORTCbits.RC1 = 0;
   563                           
   564                           ;main.c: 270: PORTCbits.RC6 = 1;
   565                           
   566                           ;main.c: 269: PORTCbits.RC1 = 1;
   567                           
   568                           ;main.c: 265: }
   569                           ;main.c: 266: }
   570                           ;main.c: 268: while(0){
   571                           
   572                           ;main.c: 264: PORTAbits.RA2 = ~PORTAbits.RA2;
   573                           
   574                           ;main.c: 263: i =0;
   575                           
   576                           ;main.c: 262: if(i>=5000){
   577                           
   578                           ;main.c: 259: }
   579                           ;main.c: 261: while(0){
   580  009F  1307               	bcf	7,6	;volatile
   581  00A0                     l1142:	
   582                           ;main.c: 275: }
   583                           ;main.c: 278: while(1){
   584                           
   585                           
   586                           ;main.c: 279: if(newData){
   587  00A0  0877               	movf	_newData,w
   588  00A1  1903               	btfsc	3,2
   589  00A2  28A0               	goto	l1142
   590                           
   591                           ;main.c: 280: setHBridge();
   592  00A3  118A  20FC  118A   	fcall	_setHBridge
   593                           
   594                           ;main.c: 281: newData = 0;
   595  00A6  01F7               	clrf	_newData
   596  00A7  28A0               	goto	l1142
   597  00A8                     __end_of_main:	
   598                           
   599                           	psect	text1
   600  00FC                     __ptext1:	
   601 ;; *************** function _setHBridge *****************
   602 ;; Defined at:
   603 ;;		line 104 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   617 ;;      Params:         0       0       0       0
   618 ;;      Locals:         0       0       0       0
   619 ;;      Temps:          0       1       0       0
   620 ;;      Totals:         0       1       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    3
   624 ;; This function calls:
   625 ;;		_UART_Write
   626 ;;		_UART_Write_Text
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _setHBridge
   634  00FC                     _setHBridge:	
   635                           
   636                           ;main.c: 105: if(receivedData[0] == 'S' && receivedData[3] == 'T')
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _setHBridge: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   640  00FC  3053               	movlw	83
   641  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   642  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   643  00FF  0620               	xorwf	_receivedData,w
   644  0100  1D03               	btfss	3,2
   645  0101  294B               	goto	l1064
   646  0102  3054               	movlw	84
   647  0103  0623               	xorwf	_receivedData+3,w
   648  0104  1D03               	btfss	3,2
   649  0105  294B               	goto	l1064
   650                           
   651                           ;main.c: 106: {
   652                           ;main.c: 107: if((receivedData[1] >> 4) ) {
   653  0106  0821               	movf	_receivedData+1,w
   654  0107  00B3               	movwf	??_setHBridge
   655  0108  3004               	movlw	4
   656  0109                     u605:	
   657  0109  1003               	clrc
   658  010A  0CB3               	rrf	??_setHBridge,f
   659  010B  3EFF               	addlw	-1
   660  010C  1D03               	skipz
   661  010D  2909               	goto	u605
   662  010E  0833               	movf	??_setHBridge,w
   663  010F  1903               	btfsc	3,2
   664  0110  2928               	goto	l136
   665                           
   666                           ;main.c: 110: if(receivedData[1] & 0x01){
   667  0111  1C21               	btfss	_receivedData+1,0
   668  0112  291D               	goto	l1036
   669                           
   670                           ;main.c: 112: UART_Write('F');
   671  0113  3046               	movlw	70
   672  0114  118A  21D1  118A   	fcall	_UART_Write
   673                           
   674                           ;main.c: 113: PORTCbits.RC1 = 0;
   675  0117  1283               	bcf	3,5	;RP0=0, select bank0
   676  0118  1303               	bcf	3,6	;RP1=0, select bank0
   677  0119  1087               	bcf	7,1	;volatile
   678                           
   679                           ;main.c: 114: PORTCbits.RC0 = 0;
   680  011A  1007               	bcf	7,0	;volatile
   681                           
   682                           ;main.c: 115: PORTCbits.RC2 = 1;
   683  011B  1507               	bsf	7,2	;volatile
   684  011C  2926               	goto	l1044
   685  011D                     l1036:	
   686                           ;main.c: 117: }else {
   687                           
   688                           ;main.c: 116: PORTCbits.RC1 = 1;
   689                           
   690                           
   691                           ;main.c: 119: UART_Write('B');
   692  011D  3042               	movlw	66
   693  011E  118A  21D1  118A   	fcall	_UART_Write
   694                           
   695                           ;main.c: 120: PORTCbits.RC1 = 0;
   696  0121  1283               	bcf	3,5	;RP0=0, select bank0
   697  0122  1303               	bcf	3,6	;RP1=0, select bank0
   698  0123  1087               	bcf	7,1	;volatile
   699                           
   700                           ;main.c: 121: PORTCbits.RC0 = 1;
   701  0124  1407               	bsf	7,0	;volatile
   702                           
   703                           ;main.c: 122: PORTCbits.RC2 = 0;
   704  0125  1107               	bcf	7,2	;volatile
   705  0126                     l1044:	
   706                           
   707                           ;main.c: 123: PORTCbits.RC1 = 1;
   708  0126  1487               	bsf	7,1	;volatile
   709                           
   710                           ;main.c: 124: }
   711                           ;main.c: 126: }else {
   712  0127  2929               	goto	l1046
   713  0128                     l136:	
   714                           
   715                           ;main.c: 128: PORTCbits.RC1 = 0;
   716  0128  1087               	bcf	7,1	;volatile
   717  0129                     l1046:	
   718                           
   719                           ;main.c: 129: }
   720                           ;main.c: 131: if((receivedData[2] >> 4) ) {
   721  0129  0822               	movf	_receivedData+2,w
   722  012A  00B3               	movwf	??_setHBridge
   723  012B  3004               	movlw	4
   724  012C                     u635:	
   725  012C  1003               	clrc
   726  012D  0CB3               	rrf	??_setHBridge,f
   727  012E  3EFF               	addlw	-1
   728  012F  1D03               	skipz
   729  0130  292C               	goto	u635
   730  0131  0833               	movf	??_setHBridge,w
   731  0132  1903               	btfsc	3,2
   732  0133  2949               	goto	l140
   733                           
   734                           ;main.c: 133: PORTCbits.RC6 = 0;
   735  0134  1307               	bcf	7,6	;volatile
   736                           
   737                           ;main.c: 134: if(receivedData[2] & 0x01){
   738  0135  1C22               	btfss	_receivedData+2,0
   739  0136  2940               	goto	l1056
   740                           
   741                           ;main.c: 136: UART_Write('L');
   742  0137  304C               	movlw	76
   743  0138  118A  21D1  118A   	fcall	_UART_Write
   744                           
   745                           ;main.c: 137: PORTCbits.RC7 = 0;
   746  013B  1283               	bcf	3,5	;RP0=0, select bank0
   747  013C  1303               	bcf	3,6	;RP1=0, select bank0
   748  013D  1387               	bcf	7,7	;volatile
   749                           
   750                           ;main.c: 138: PORTCbits.RC3 = 1;
   751  013E  1587               	bsf	7,3	;volatile
   752                           
   753                           ;main.c: 139: }else {
   754  013F  2947               	goto	l1062
   755  0140                     l1056:	
   756                           
   757                           ;main.c: 141: UART_Write('R');
   758  0140  3052               	movlw	82
   759  0141  118A  21D1         	fcall	_UART_Write
   760                           
   761                           ;main.c: 142: PORTCbits.RC7 = 1;
   762  0143  1283               	bcf	3,5	;RP0=0, select bank0
   763  0144  1303               	bcf	3,6	;RP1=0, select bank0
   764  0145  1787               	bsf	7,7	;volatile
   765                           
   766                           ;main.c: 143: PORTCbits.RC3 = 0;
   767  0146  1187               	bcf	7,3	;volatile
   768  0147                     l1062:	
   769                           
   770                           ;main.c: 144: }
   771                           ;main.c: 145: PORTCbits.RC6 = 1;
   772  0147  1707               	bsf	7,6	;volatile
   773                           
   774                           ;main.c: 146: }else {
   775  0148  0008               	return
   776  0149                     l140:	
   777                           
   778                           ;main.c: 148: PORTCbits.RC6 = 0;
   779  0149  1307               	bcf	7,6	;volatile
   780                           
   781                           ;main.c: 149: }
   782                           ;main.c: 152: }
   783  014A  0008               	return
   784  014B                     l1064:	
   785                           
   786                           ;main.c: 154: else {
   787                           ;main.c: 156: UART_Write_Text("ERROR1");
   788  014B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   789  014C  118A  214F         	fcall	_UART_Write_Text
   790  014E  0008               	return
   791  014F                     __end_of_setHBridge:	
   792                           
   793                           	psect	text2
   794  014F                     __ptext2:	
   795 ;; *************** function _UART_Write_Text *****************
   796 ;; Defined at:
   797 ;;		line 82 in file "uart.h"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  text            1    wreg     PTR unsigned char 
   800 ;;		 -> STR_1(7), 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  text            1    1[BANK0 ] PTR unsigned char 
   803 ;;		 -> STR_1(7), 
   804 ;;  i               2    2[BANK0 ] int 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   814 ;;      Params:         0       0       0       0
   815 ;;      Locals:         0       3       0       0
   816 ;;      Temps:          0       0       0       0
   817 ;;      Totals:         0       3       0       0
   818 ;;Total ram usage:        3 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    2
   821 ;; This function calls:
   822 ;;		_UART_Write
   823 ;; This function is called by:
   824 ;;		_setHBridge
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           
   829                           ;psect for function _UART_Write_Text
   830  014F                     _UART_Write_Text:	
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   834                           ;UART_Write_Text@text stored from wreg
   835  014F  1283               	bcf	3,5	;RP0=0, select bank0
   836  0150  1303               	bcf	3,6	;RP1=0, select bank0
   837  0151  00B0               	movwf	UART_Write_Text@text
   838                           
   839                           ;uart.h: 84: int i;
   840                           ;uart.h: 85: for(i=0;text[i]!='\0';i++)
   841  0152  01B1               	clrf	UART_Write_Text@i
   842  0153  01B2               	clrf	UART_Write_Text@i+1
   843  0154                     l1016:	
   844  0154  0831               	movf	UART_Write_Text@i,w
   845  0155  0730               	addwf	UART_Write_Text@text,w
   846  0156  0084               	movwf	4
   847  0157  118A  21B7  118A   	fcall	stringdir
   848  015A  3A00               	xorlw	0
   849  015B  1903               	btfsc	3,2
   850  015C  0008               	return
   851                           
   852                           ;uart.h: 86: UART_Write(text[i]);
   853  015D  0831               	movf	UART_Write_Text@i,w
   854  015E  0730               	addwf	UART_Write_Text@text,w
   855  015F  0084               	movwf	4
   856  0160  118A  21B7  118A   	fcall	stringdir
   857  0163  118A  21D1  118A   	fcall	_UART_Write
   858  0166  3001               	movlw	1
   859  0167  1283               	bcf	3,5	;RP0=0, select bank0
   860  0168  1303               	bcf	3,6	;RP1=0, select bank0
   861  0169  07B1               	addwf	UART_Write_Text@i,f
   862  016A  1803               	skipnc
   863  016B  0AB2               	incf	UART_Write_Text@i+1,f
   864  016C  3000               	movlw	0
   865  016D  07B2               	addwf	UART_Write_Text@i+1,f
   866  016E  2954               	goto	l1016
   867  016F                     __end_of_UART_Write_Text:	
   868                           
   869                           	psect	text3
   870  01D1                     __ptext3:	
   871 ;; *************** function _UART_Write *****************
   872 ;; Defined at:
   873 ;;		line 76 in file "uart.h"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  data            1    wreg     unsigned char 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  data            1    0[BANK0 ] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   887 ;;      Params:         0       0       0       0
   888 ;;      Locals:         0       1       0       0
   889 ;;      Temps:          0       0       0       0
   890 ;;      Totals:         0       1       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_UART_Write_Text
   898 ;;		_setHBridge
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _UART_Write
   905  01D1                     _UART_Write:	
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _UART_Write: [wreg]
   909                           ;UART_Write@data stored from wreg
   910  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   911  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   912  01D3  00AF               	movwf	UART_Write@data
   913  01D4                     l103:	
   914                           ;uart.h: 78: while(!TRMT);
   915                           
   916  01D4  1683               	bsf	3,5	;RP0=1, select bank1
   917  01D5  1303               	bcf	3,6	;RP1=0, select bank1
   918  01D6  1C98               	btfss	24,1	;volatile
   919  01D7  29D4               	goto	l103
   920                           
   921                           ;uart.h: 79: TXREG = data;
   922  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   923  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   924  01DA  082F               	movf	UART_Write@data,w
   925  01DB  0099               	movwf	25	;volatile
   926  01DC  0008               	return
   927  01DD                     __end_of_UART_Write:	
   928                           
   929                           	psect	text4
   930  016F                     __ptext4:	
   931 ;; *************** function _UART_Init9600 *****************
   932 ;; Defined at:
   933 ;;		line 39 in file "uart.h"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      unsigned char 
   940 ;; Registers used:
   941 ;;		wreg
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   947 ;;      Params:         0       0       0       0
   948 ;;      Locals:         0       0       0       0
   949 ;;      Temps:          0       0       0       0
   950 ;;      Totals:         0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _UART_Init9600
   963  016F                     _UART_Init9600:	
   964                           
   965                           ;uart.h: 40: SPBRG = 25;
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _UART_Init9600: [wreg]
   969  016F  3019               	movlw	25
   970  0170  1683               	bsf	3,5	;RP0=1, select bank1
   971  0171  1303               	bcf	3,6	;RP1=0, select bank1
   972  0172  0099               	movwf	25	;volatile
   973                           
   974                           ;uart.h: 41: BRGH = 1;
   975  0173  1518               	bsf	24,2	;volatile
   976                           
   977                           ;uart.h: 42: SYNC = 0;
   978  0174  1218               	bcf	24,4	;volatile
   979                           
   980                           ;uart.h: 43: SPEN = 1;
   981  0175  1283               	bcf	3,5	;RP0=0, select bank0
   982  0176  1303               	bcf	3,6	;RP1=0, select bank0
   983  0177  1798               	bsf	24,7	;volatile
   984                           
   985                           ;uart.h: 44: TRISB7 = 1;
   986  0178  1683               	bsf	3,5	;RP0=1, select bank1
   987  0179  1303               	bcf	3,6	;RP1=0, select bank1
   988  017A  1786               	bsf	6,7	;volatile
   989                           
   990                           ;uart.h: 45: TRISB5 = 1;
   991  017B  1686               	bsf	6,5	;volatile
   992                           
   993                           ;uart.h: 46: CREN = 1;
   994  017C  1283               	bcf	3,5	;RP0=0, select bank0
   995  017D  1303               	bcf	3,6	;RP1=0, select bank0
   996  017E  1618               	bsf	24,4	;volatile
   997                           
   998                           ;uart.h: 47: TXEN = 1;
   999  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1000  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1001  0181  1698               	bsf	24,5	;volatile
  1002                           
  1003                           ;uart.h: 49: RCIE = 1;
  1004  0182  168C               	bsf	12,5	;volatile
  1005                           
  1006                           ;uart.h: 50: PEIE = 1;
  1007  0183  170B               	bsf	11,6	;volatile
  1008  0184  0008               	return
  1009  0185                     __end_of_UART_Init9600:	
  1010                           
  1011                           	psect	text5
  1012  0185                     __ptext5:	
  1013 ;; *************** function _InitTimer1 *****************
  1014 ;; Defined at:
  1015 ;;		line 163 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1029 ;;      Params:         0       0       0       0
  1030 ;;      Locals:         0       0       0       0
  1031 ;;      Temps:          0       1       0       0
  1032 ;;      Totals:         0       1       0       0
  1033 ;;Total ram usage:        1 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _InitTimer1
  1045  0185                     _InitTimer1:	
  1046                           
  1047                           ;main.c: 164: T1CON = 0x01;
  1048                           
  1049                           ;incstack = 0
  1050                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  1051  0185  3001               	movlw	1
  1052  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0188  0090               	movwf	16	;volatile
  1055                           
  1056                           ;main.c: 165: TMR1IF = 0;
  1057  0189  100C               	bcf	12,0	;volatile
  1058                           
  1059                           ;main.c: 166: TMR1H = 0xFF;
  1060  018A  30FF               	movlw	255
  1061  018B  008F               	movwf	15	;volatile
  1062                           
  1063                           ;main.c: 167: TMR1L = 0x38;
  1064  018C  3038               	movlw	56
  1065  018D  008E               	movwf	14	;volatile
  1066                           
  1067                           ;main.c: 168: TMR1IE = 1;
  1068  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1069  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0190  140C               	bsf	12,0	;volatile
  1071                           
  1072                           ;main.c: 169: INTCON |= 0xC0;
  1073  0191  30C0               	movlw	192
  1074  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0194  00AF               	movwf	??_InitTimer1
  1077  0195  082F               	movf	??_InitTimer1,w
  1078  0196  048B               	iorwf	11,f	;volatile
  1079  0197  0008               	return
  1080  0198                     __end_of_InitTimer1:	
  1081                           
  1082                           	psect	text6
  1083  01C4                     __ptext6:	
  1084 ;; *************** function _InitTimer0 *****************
  1085 ;; Defined at:
  1086 ;;		line 175 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1100 ;;      Params:         0       0       0       0
  1101 ;;      Locals:         0       0       0       0
  1102 ;;      Temps:          0       1       0       0
  1103 ;;      Totals:         0       1       0       0
  1104 ;;Total ram usage:        1 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function _InitTimer0
  1116  01C4                     _InitTimer0:	
  1117                           
  1118                           ;main.c: 176: OPTION_REG = 0x81;
  1119                           
  1120                           ;incstack = 0
  1121                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
  1122  01C4  3081               	movlw	129
  1123  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1124  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1125  01C7  0081               	movwf	1	;volatile
  1126                           
  1127                           ;main.c: 177: TMR0 = 56;
  1128  01C8  3038               	movlw	56
  1129  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1130  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1131  01CB  0081               	movwf	1	;volatile
  1132                           
  1133                           ;main.c: 178: INTCON |= 0xA0;
  1134  01CC  30A0               	movlw	160
  1135  01CD  00AF               	movwf	??_InitTimer0
  1136  01CE  082F               	movf	??_InitTimer0,w
  1137  01CF  048B               	iorwf	11,f	;volatile
  1138  01D0  0008               	return
  1139  01D1                     __end_of_InitTimer0:	
  1140                           
  1141                           	psect	text7
  1142  00A8                     __ptext7:	
  1143 ;; *************** function _tc_int *****************
  1144 ;; Defined at:
  1145 ;;		line 64 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1159 ;;      Params:         0       0       0       0
  1160 ;;      Locals:         0       0       0       0
  1161 ;;      Temps:          5       0       0       0
  1162 ;;      Totals:         5       0       0       0
  1163 ;;Total ram usage:        5 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		Interrupt level 1
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _tc_int
  1174  00A8                     _tc_int:	
  1175                           
  1176                           ;main.c: 65: if (T0IF){
  1177  00A8  1D0B               	btfss	11,2	;volatile
  1178  00A9  28BA               	goto	i1l123
  1179                           
  1180                           ;main.c: 67: T0IF = 0;
  1181  00AA  110B               	bcf	11,2	;volatile
  1182                           
  1183                           ;main.c: 68: TMR0 = 56;
  1184  00AB  3038               	movlw	56
  1185  00AC  0081               	movwf	1	;volatile
  1186                           
  1187                           ;main.c: 71: TMR1IF = 0;
  1188  00AD  100C               	bcf	12,0	;volatile
  1189                           
  1190                           ;main.c: 72: TMR1H = 0xFf;
  1191  00AE  30FF               	movlw	255
  1192  00AF  008F               	movwf	15	;volatile
  1193                           
  1194                           ;main.c: 73: TMR1L = 0x38;
  1195  00B0  3038               	movlw	56
  1196  00B1  008E               	movwf	14	;volatile
  1197                           
  1198                           ;main.c: 74: TMR1ON = 1;
  1199  00B2  1410               	bsf	16,0	;volatile
  1200                           
  1201                           ;main.c: 75: i++;
  1202  00B3  3001               	movlw	1
  1203  00B4  07F5               	addwf	_i,f
  1204  00B5  1803               	skipnc
  1205  00B6  0AF6               	incf	_i+1,f
  1206  00B7  3000               	movlw	0
  1207  00B8  07F6               	addwf	_i+1,f
  1208  00B9  28BE               	goto	L2
  1209  00BA                     i1l123:	
  1210                           ;main.c: 78: }
  1211                           
  1212                           ;main.c: 76: PORTCbits.RC1 = 1;
  1213                           
  1214                           
  1215                           ;main.c: 79: else if (TMR1IF){
  1216  00BA  1C0C               	btfss	12,0	;volatile
  1217  00BB  28C0               	goto	i1l125
  1218                           
  1219                           ;main.c: 80: TMR1IF = 0;
  1220  00BC  100C               	bcf	12,0	;volatile
  1221                           
  1222                           ;main.c: 81: TMR1ON = 0;
  1223  00BD  1010               	bcf	16,0	;volatile
  1224  00BE                     L2:	
  1225                           
  1226                           ;main.c: 84: PORTCbits.RC1 = 1;
  1227  00BE  1487               	bsf	7,1	;volatile
  1228                           
  1229                           ;main.c: 86: } else if(RCIF){
  1230  00BF  28F1               	goto	i1l132
  1231  00C0                     i1l125:	
  1232  00C0  1E8C               	btfss	12,5	;volatile
  1233  00C1  28F1               	goto	i1l132
  1234                           
  1235                           ;main.c: 87: tmpChar = RCREG;
  1236  00C2  081A               	movf	26,w	;volatile
  1237  00C3  00F0               	movwf	??_tc_int
  1238  00C4  0870               	movf	??_tc_int,w
  1239  00C5  00F8               	movwf	_tmpChar
  1240                           
  1241                           ;main.c: 88: if(tmpChar == 'S' && newData == 0){
  1242  00C6  3053               	movlw	83
  1243  00C7  0678               	xorwf	_tmpChar,w
  1244  00C8  1D03               	btfss	3,2
  1245  00C9  28D6               	goto	i1l798
  1246  00CA  0877               	movf	_newData,w
  1247  00CB  1D03               	btfss	3,2
  1248  00CC  28D6               	goto	i1l798
  1249                           
  1250                           ;main.c: 89: i = 1;
  1251  00CD  3001               	movlw	1
  1252  00CE  00F5               	movwf	_i
  1253  00CF  3000               	movlw	0
  1254  00D0  00F6               	movwf	_i+1
  1255                           
  1256                           ;main.c: 90: receivedData[0] = tmpChar;
  1257  00D1  0878               	movf	_tmpChar,w
  1258  00D2  00F0               	movwf	??_tc_int
  1259  00D3  0870               	movf	??_tc_int,w
  1260  00D4  00A0               	movwf	_receivedData
  1261                           
  1262                           ;main.c: 91: }else if(tmpChar == 'T'){
  1263  00D5  28F1               	goto	i1l132
  1264  00D6                     i1l798:	
  1265  00D6  3054               	movlw	84
  1266  00D7  0678               	xorwf	_tmpChar,w
  1267  00D8  1D03               	btfss	3,2
  1268  00D9  28E3               	goto	i1l806
  1269                           
  1270                           ;main.c: 92: receivedData[3] = tmpChar;
  1271  00DA  0878               	movf	_tmpChar,w
  1272  00DB  00F0               	movwf	??_tc_int
  1273  00DC  0870               	movf	??_tc_int,w
  1274  00DD  00A3               	movwf	_receivedData+3
  1275                           
  1276                           ;main.c: 93: i=0;
  1277  00DE  01F5               	clrf	_i
  1278  00DF  01F6               	clrf	_i+1
  1279                           
  1280                           ;main.c: 94: newData=1;
  1281  00E0  01F7               	clrf	_newData
  1282  00E1  0AF7               	incf	_newData,f
  1283                           
  1284                           ;main.c: 95: }
  1285  00E2  28F1               	goto	i1l132
  1286  00E3                     i1l806:	
  1287                           
  1288                           ;main.c: 96: else{
  1289                           ;main.c: 97: receivedData[i] = RCREG;
  1290  00E3  081A               	movf	26,w	;volatile
  1291  00E4  00F0               	movwf	??_tc_int
  1292  00E5  0875               	movf	_i,w
  1293  00E6  3E20               	addlw	(low (_receivedData| 0))& (0+255)
  1294  00E7  0084               	movwf	4
  1295  00E8  0870               	movf	??_tc_int,w
  1296  00E9  1383               	bcf	3,7	;select IRP bank0
  1297  00EA  0080               	movwf	0
  1298                           
  1299                           ;main.c: 98: i++;
  1300  00EB  3001               	movlw	1
  1301  00EC  07F5               	addwf	_i,f
  1302  00ED  1803               	skipnc
  1303  00EE  0AF6               	incf	_i+1,f
  1304  00EF  3000               	movlw	0
  1305  00F0  07F6               	addwf	_i+1,f
  1306  00F1                     i1l132:	
  1307  00F1  0874               	movf	??_tc_int+4,w
  1308  00F2  00FF               	movwf	127
  1309  00F3  0873               	movf	??_tc_int+3,w
  1310  00F4  008A               	movwf	10
  1311  00F5  0872               	movf	??_tc_int+2,w
  1312  00F6  0084               	movwf	4
  1313  00F7  0E71               	swapf	(??_tc_int+1)^(0+-128),w
  1314  00F8  0083               	movwf	3
  1315  00F9  0EFE               	swapf	126,f
  1316  00FA  0E7E               	swapf	126,w
  1317  00FB  0009               	retfie
  1318  00FC                     __end_of_tc_int:	
  1319  007E                     btemp	set	126	;btemp
  1320  007E                     wtemp	set	126
  1321  007E                     wtemp0	set	126
  1322  0080                     wtemp1	set	128
  1323  0082                     wtemp2	set	130
  1324  0084                     wtemp3	set	132
  1325  0086                     wtemp4	set	134
  1326  0088                     wtemp5	set	136
  1327  007F                     wtemp6	set	127
  1328  007E                     ttemp	set	126
  1329  007E                     ttemp0	set	126
  1330  0081                     ttemp1	set	129
  1331  0084                     ttemp2	set	132
  1332  0087                     ttemp3	set	135
  1333  007F                     ttemp4	set	127
  1334  007E                     ltemp	set	126
  1335  007E                     ltemp0	set	126
  1336  0082                     ltemp1	set	130
  1337  0086                     ltemp2	set	134
  1338  0080                     ltemp3	set	128
  1339                           
  1340                           	psect	intentry
  1341  0004                     __pintentry:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0]
  1344                           
  1345  0004                     interrupt_function:	
  1346  007E                     saved_w	set	btemp
  1347  0004  00FE               	movwf	btemp
  1348  0005  0E03               	swapf	3,w
  1349  0006  00F1               	movwf	??_tc_int+1
  1350  0007  0804               	movf	4,w
  1351  0008  00F2               	movwf	??_tc_int+2
  1352  0009  080A               	movf	10,w
  1353  000A  00F3               	movwf	??_tc_int+3
  1354  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1355  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1356  000D  087F               	movf	btemp+1,w
  1357  000E  00F4               	movwf	??_tc_int+4
  1358  000F  118A  28A8         	ljmp	_tc_int


Data Sizes:
    Strings     7
    Constant    0
    Data        15
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      8      23
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setHBridge
    _setHBridge->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     229
                                              5 BANK0      3     3      0
                         _InitTimer0
                         _InitTimer1
                      _UART_Init9600
                         _UART_Write
                         _setHBridge
 ---------------------------------------------------------------------------------
 (1) _setHBridge                                           1     1      0     207
                                              4 BANK0      1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      3     3      0     185
                                              1 BANK0      3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init9600                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tc_int                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _InitTimer1
   _UART_Init9600
   _UART_Write
   _setHBridge
     _UART_Write
     _UART_Write_Text
       _UART_Write

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      17       3       28.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      10        0.0%
ABS                  0      0      20       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Feb 08 19:10:08 2017

                       _i 0075                         pc 0002               __CFG_CP$OFF 0000  
                      fsr 0004                       l103 01D4                       l140 0149  
                     l136 0128                       _GIE 005F              __CFG_CPD$OFF 0000  
                     u605 0109                       u635 012C                       u767 003D  
                     u777 0083                       u787 0096                       fsr0 0004  
                     indf 0000              __CFG_IESO$ON 0000              __CFG_FOSC$HS 0000  
                    l1016 0154                      l1104 0057                      l1044 0126  
                    l1036 011D                      l1062 0147                      l1046 0129  
                    l1142 00A0                      l1056 0140                      l1064 014B  
                    STR_1 01BD                      _BRGH 04C2                      _T0IF 005A  
                    _CREN 00C4                      _PEIE 005E                      _RCIE 0465  
                    _RCIF 0065                      _TMR0 0001                      _SPEN 00C7  
                    _TRMT 04C1                      _TXEN 04C5                      _SYNC 04C4  
           __CFG_FCMEN$ON 0000                      _main 0025                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0011  
                    ttemp 007E                      wtemp 007E             __CFG_MCLRE$ON 0000  
 __end_of_UART_Write_Text 016F                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 011E                     _T1CON 0010                     i1l123 00BA  
                   i1l132 00F1                     i1l125 00C0                     i1l806 00E3  
                   i1l798 00D6                     _RCREG 001A                     _TMR1H 000F  
                   _TMR1L 000E                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TXREG 0019  
             ?_UART_Write 0070                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __initialization 0013                _InitTimer0 01C4  
              _InitTimer1 0185              __end_of_main 00A8                    ??_main 0034  
                  _ANSELH 011F                    _INTCON 000B                    _TMR1IE 0460  
                  _TMR1IF 0060                    _TMR1ON 0080                    _TRISB5 0435  
                  _TRISB7 0437            __CFG_PWRTE$OFF 0000       __size_of_UART_Write 000C  
        ?_UART_Write_Text 0070                    _tc_int 00A8     __end_of_UART_Init9600 0185  
                  saved_w 007E   __end_of__initialization 0022               ?_InitTimer0 0070  
             ?_InitTimer1 0070            __pcstackCOMMON 0070              __pidataBANK0 01A8  
              __pmaintext 0025                __pintentry 0004                   ?_tc_int 0070  
            ??_UART_Write 0075       __size_of_InitTimer0 000D       __size_of_InitTimer1 0013  
              __stringtab 01B7        __end_of_UART_Write 01DD           __size_of_tc_int 0054  
                 __ptext1 00FC                   __ptext2 014F                   __ptext3 01D1  
                 __ptext4 016F                   __ptext5 0185                   __ptext6 01C4  
                 __ptext7 00A8                _setHBridge 00FC                   _newData 0077  
                 _tmpChar 0078      end_of_initialization 0022                 _PORTAbits 0005  
               _PORTCbits 0007            UART_Write@data 002F              ??_InitTimer0 002F  
            ??_InitTimer1 002F            __end_of_tc_int 00FC               ?_setHBridge 0070  
__size_of_UART_Write_Text 0020       start_initialization 0013        __end_of_InitTimer0 01D1  
      __end_of_InitTimer1 0198    __size_of_UART_Init9600 0016                init_fetch0 0198  
             __pdataBANK0 0020                  ??_tc_int 0070               __pbssCOMMON 0075  
               ___latbits 0001             __pcstackBANK0 002F       __size_of_setHBridge 0053  
               __pstrings 01B7             _UART_Init9600 016F         ??_UART_Write_Text 0075  
            _receivedData 0020         interrupt_function 0004                _ADCON0bits 001F  
             __stringbase 01BC            ?_UART_Init9600 0070        __end_of__stringtab 01BD  
            ??_setHBridge 0033       UART_Write_Text@text 0030             __size_of_main 0083  
      __end_of_setHBridge 014F           ??_UART_Init9600 0075                  init_ram0 019C  
                intlevel1 0000                 stringcode 01B7           _UART_Write_Text 014F  
              _OPTION_REG 0081                  stringdir 01B7                  stringtab 01B7  
              _UART_Write 01D1          UART_Write_Text@i 0031  
