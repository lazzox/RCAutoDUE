

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Feb 08 19:54:23 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F689
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  008C                     	;# 
    50  008D                     	;# 
    51  008E                     	;# 
    52  008F                     	;# 
    53  0090                     	;# 
    54  0093                     	;# 
    55  0093                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0095                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0096                     	;# 
    62  0097                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009A                     	;# 
    66  009B                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011E                     	;# 
    81  011F                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  019E                     	;# 
    85                           
    86                           	psect	idataBANK0
    87  01A9                     __pidataBANK0:	
    88                           
    89                           ;initializer for _receivedData
    90  01A9  3430               	retlw	48
    91  01AA  3400               	retlw	0
    92  01AB  3400               	retlw	0
    93  01AC  3400               	retlw	0
    94  01AD  3400               	retlw	0
    95  01AE  3400               	retlw	0
    96  01AF  3400               	retlw	0
    97  01B0  3400               	retlw	0
    98  01B1  3400               	retlw	0
    99  01B2  3400               	retlw	0
   100  01B3  3400               	retlw	0
   101  01B4  3400               	retlw	0
   102  01B5  3400               	retlw	0
   103  01B6  3400               	retlw	0
   104  01B7  3400               	retlw	0
   105  001F                     _ADCON0bits	set	31
   106  000B                     _INTCON	set	11
   107  0005                     _PORTA	set	5
   108  0005                     _PORTAbits	set	5
   109  0006                     _PORTB	set	6
   110  0007                     _PORTC	set	7
   111  0007                     _PORTCbits	set	7
   112  001A                     _RCREG	set	26
   113  0010                     _T1CON	set	16
   114  0001                     _TMR0	set	1
   115  000F                     _TMR1H	set	15
   116  000E                     _TMR1L	set	14
   117  0019                     _TXREG	set	25
   118  00C4                     _CREN	set	196
   119  005F                     _GIE	set	95
   120  005E                     _PEIE	set	94
   121  0065                     _RCIF	set	101
   122  00C7                     _SPEN	set	199
   123  005A                     _T0IF	set	90
   124  0060                     _TMR1IF	set	96
   125  0080                     _TMR1ON	set	128
   126  0081                     _OPTION_REG	set	129
   127  0099                     _SPBRG	set	153
   128  0085                     _TRISA	set	133
   129  0086                     _TRISB	set	134
   130  0087                     _TRISC	set	135
   131  04C2                     _BRGH	set	1218
   132  0465                     _RCIE	set	1125
   133  04C4                     _SYNC	set	1220
   134  0460                     _TMR1IE	set	1120
   135  0435                     _TRISB5	set	1077
   136  0437                     _TRISB7	set	1079
   137  04C1                     _TRMT	set	1217
   138  04C5                     _TXEN	set	1221
   139  011E                     _ANSEL	set	286
   140  011F                     _ANSELH	set	287
   141                           
   142                           	psect	strings
   143  01B8                     __pstrings:	
   144  01B8                     stringtab:	
   145  01B8                     __stringtab:	
   146  01B8                     stringcode:	
   147                           ;	String table - string pointers are 1 byte each
   148                           
   149  01B8                     stringdir:	
   150  01B8  3001               	movlw	high stringdir
   151  01B9  008A               	movwf	10
   152  01BA  0804               	movf	4,w
   153  01BB  0A84               	incf	4,f
   154  01BC  0782               	addwf	2,f
   155  01BD                     __stringbase:	
   156  01BD  3400               	retlw	0
   157  01BE                     __end_of__stringtab:	
   158  01BE                     STR_1:	
   159  01BE  3445               	retlw	69	;'E'
   160  01BF  3452               	retlw	82	;'R'
   161  01C0  3452               	retlw	82	;'R'
   162  01C1  344F               	retlw	79	;'O'
   163  01C2  3452               	retlw	82	;'R'
   164  01C3  3431               	retlw	49	;'1'
   165  01C4  3400               	retlw	0
   166                           
   167                           ; #config settings
   168  0000                     
   169                           	psect	cinit
   170  0013                     start_initialization:	
   171  0013                     __initialization:	
   172                           
   173                           ; Clear objects allocated to COMMON
   174  0013  01F5               	clrf	__pbssCOMMON& (0+127)
   175  0014  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   176  0015  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   177  0016  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   178                           
   179                           ; Initialize objects allocated to BANK0
   180  0017  1383               	bcf	3,7	;select IRP bank0
   181  0018  302F               	movlw	low (__pdataBANK0+15)
   182  0019  00FD               	movwf	btemp+-1
   183  001A  3001               	movlw	high __pidataBANK0
   184  001B  00FE               	movwf	btemp
   185  001C  30A9               	movlw	low __pidataBANK0
   186  001D  00FF               	movwf	btemp+1
   187  001E  3020               	movlw	low __pdataBANK0
   188  001F  0084               	movwf	4
   189  0020  118A  219D         	fcall	init_ram0
   190  0022                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  0022                     __end_of__initialization:	
   194  0022  0183               	clrf	3
   195  0023  118A  2825         	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198  0075                     __pbssCOMMON:	
   199  0075                     _i:	
   200  0075                     	ds	2
   201  0077                     _newData:	
   202  0077                     	ds	1
   203  0078                     _tmpChar:	
   204  0078                     	ds	1
   205                           
   206                           	psect	dataBANK0
   207  0020                     __pdataBANK0:	
   208  0020                     _receivedData:	
   209  0020                     	ds	15
   210                           
   211                           	psect	inittext
   212  0199                     init_fetch0:	
   213                           ;	Called with low address in FSR and high address in W
   214                           
   215  0199  087E               	movf	126,w
   216  019A  008A               	movwf	10
   217  019B  087F               	movf	127,w
   218  019C  0082               	movwf	2
   219  019D                     init_ram0:	
   220                           ;Called with:
   221                           ;	high address of idata address in btemp 
   222                           ;	low address of idata address in btemp+1 
   223                           ;	low address of data in FSR
   224                           ;	high address + 1 of data in btemp-1
   225                           
   226  019D  2199  118A         	fcall	init_fetch0
   227  019F  0080               	movwf	0
   228  01A0  0A84               	incf	4,f
   229  01A1  0804               	movf	4,w
   230  01A2  067D               	xorwf	125,w
   231  01A3  1903               	btfsc	3,2
   232  01A4  3400               	retlw	0
   233  01A5  0AFF               	incf	127,f
   234  01A6  1903               	btfsc	3,2
   235  01A7  0AFE               	incf	126,f
   236  01A8  299D               	goto	init_ram0
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_UART_Init9600:	
   241  0070                     ?_UART_Write:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_UART_Write_Text:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_tc_int:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_tc_int:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_setHBridge:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_InitTimer1:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_InitTimer0:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267  0070                     	ds	5
   268  0075                     ??_UART_Init9600:	
   269  0075                     ??_UART_Write:	
   270                           ; 1 bytes @ 0x5
   271                           
   272  0075                     ??_UART_Write_Text:	
   273                           ; 1 bytes @ 0x5
   274                           
   275                           
   276                           	psect	cstackBANK0
   277  002F                     __pcstackBANK0:	
   278                           ; 1 bytes @ 0x5
   279                           
   280  002F                     ??_InitTimer1:	
   281  002F                     ??_InitTimer0:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  002F                     UART_Write@data:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289  002F                     	ds	1
   290  0030                     UART_Write_Text@text:	
   291                           
   292                           ; 1 bytes @ 0x1
   293  0030                     	ds	1
   294  0031                     UART_Write_Text@i:	
   295                           
   296                           ; 2 bytes @ 0x2
   297  0031                     	ds	2
   298  0033                     ??_setHBridge:	
   299                           
   300                           ; 1 bytes @ 0x4
   301  0033                     	ds	1
   302  0034                     ??_main:	
   303                           
   304                           ; 1 bytes @ 0x5
   305  0034                     	ds	3
   306                           
   307                           	psect	maintext
   308  0025                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 187 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   328 ;;      Params:         0       0       0       0
   329 ;;      Locals:         0       0       0       0
   330 ;;      Temps:          0       3       0       0
   331 ;;      Totals:         0       3       0       0
   332 ;;Total ram usage:        3 bytes
   333 ;; Hardware stack levels required when called:    4
   334 ;; This function calls:
   335 ;;		_InitTimer0
   336 ;;		_InitTimer1
   337 ;;		_UART_Init9600
   338 ;;		_UART_Write
   339 ;;		_setHBridge
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _main
   347  0025                     _main:	
   348                           
   349                           ;main.c: 190: ANSEL = 0b00000000;
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   353  0025  1283               	bcf	3,5	;RP0=0, select bank2
   354  0026  1703               	bsf	3,6	;RP1=1, select bank2
   355  0027  019E               	clrf	30	;volatile
   356                           
   357                           ;main.c: 191: ANSELH = 0;
   358  0028  019F               	clrf	31	;volatile
   359                           
   360                           ;main.c: 192: ADCON0bits.ADON = 0;
   361  0029  1283               	bcf	3,5	;RP0=0, select bank0
   362  002A  1303               	bcf	3,6	;RP1=0, select bank0
   363  002B  101F               	bcf	31,0	;volatile
   364                           
   365                           ;main.c: 195: TRISA = 0x00;
   366  002C  1683               	bsf	3,5	;RP0=1, select bank1
   367  002D  1303               	bcf	3,6	;RP1=0, select bank1
   368  002E  0185               	clrf	5	;volatile
   369                           
   370                           ;main.c: 196: TRISB = 0x00;
   371  002F  0186               	clrf	6	;volatile
   372                           
   373                           ;main.c: 197: TRISC = 0x00;
   374  0030  0187               	clrf	7	;volatile
   375                           
   376                           ;main.c: 199: PORTA = 0x00;
   377  0031  1283               	bcf	3,5	;RP0=0, select bank0
   378  0032  1303               	bcf	3,6	;RP1=0, select bank0
   379  0033  0185               	clrf	5	;volatile
   380                           
   381                           ;main.c: 200: PORTB = 0x00;
   382  0034  0186               	clrf	6	;volatile
   383                           
   384                           ;main.c: 201: PORTC = 0x00;
   385  0035  0187               	clrf	7	;volatile
   386                           
   387                           ;main.c: 202: PORTAbits.RA2 = 1;
   388  0036  1505               	bsf	5,2	;volatile
   389                           
   390                           ;main.c: 203: _delay((unsigned long)((2000)*(20000000/4000.0)));
   391  0037  3033               	movlw	51
   392  0038  00B6               	movwf	??_main+2
   393  0039  30BC               	movlw	188
   394  003A  00B5               	movwf	??_main+1
   395  003B  3010               	movlw	16
   396  003C  00B4               	movwf	??_main
   397  003D                     u767:	
   398  003D  0BB4               	decfsz	??_main,f
   399  003E  283D               	goto	u767
   400  003F  0BB5               	decfsz	??_main+1,f
   401  0040  283D               	goto	u767
   402  0041  0BB6               	decfsz	??_main+2,f
   403  0042  283D               	goto	u767
   404                           
   405                           ;main.c: 204: PORTAbits.RA2 = 0;
   406  0043  1283               	bcf	3,5	;RP0=0, select bank0
   407  0044  1303               	bcf	3,6	;RP1=0, select bank0
   408  0045  1105               	bcf	5,2	;volatile
   409                           
   410                           ;main.c: 206: InitTimer0();
   411  0046  118A  21C5  118A   	fcall	_InitTimer0
   412                           
   413                           ;main.c: 207: InitTimer1();
   414  0049  118A  2186  118A   	fcall	_InitTimer1
   415                           
   416                           ;main.c: 215: UART_Init9600();
   417  004C  118A  2170  118A   	fcall	_UART_Init9600
   418                           
   419                           ;main.c: 216: GIE = 1;
   420  004F  178B               	bsf	11,7	;volatile
   421                           
   422                           ;main.c: 219: PORTCbits.RC1 = 0;
   423  0050  1283               	bcf	3,5	;RP0=0, select bank0
   424  0051  1303               	bcf	3,6	;RP1=0, select bank0
   425  0052  1087               	bcf	7,1	;volatile
   426                           
   427                           ;main.c: 220: PORTCbits.RC6 = 0;
   428  0053  1307               	bcf	7,6	;volatile
   429                           
   430                           ;main.c: 221: PORTCbits.RC7 = 0;
   431  0054  1387               	bcf	7,7	;volatile
   432                           
   433                           ;main.c: 222: PORTCbits.RC3 = 0;
   434  0055  1187               	bcf	7,3	;volatile
   435  0056                     l1080:	
   436                           ;main.c: 224: while(1){
   437                           
   438                           
   439                           ;main.c: 225: if(newData){
   440  0056  0877               	movf	_newData,w
   441  0057  1903               	btfsc	3,2
   442  0058  2856               	goto	l1080
   443                           
   444                           ;main.c: 228: UART_Write(receivedData[0]);
   445  0059  1283               	bcf	3,5	;RP0=0, select bank0
   446  005A  1303               	bcf	3,6	;RP1=0, select bank0
   447  005B  0820               	movf	_receivedData,w
   448  005C  118A  21D2  118A   	fcall	_UART_Write
   449                           
   450                           ;main.c: 229: UART_Write(receivedData[1]);
   451  005F  1283               	bcf	3,5	;RP0=0, select bank0
   452  0060  1303               	bcf	3,6	;RP1=0, select bank0
   453  0061  0821               	movf	_receivedData+1,w
   454  0062  118A  21D2  118A   	fcall	_UART_Write
   455                           
   456                           ;main.c: 230: UART_Write(receivedData[2]);
   457  0065  1283               	bcf	3,5	;RP0=0, select bank0
   458  0066  1303               	bcf	3,6	;RP1=0, select bank0
   459  0067  0822               	movf	_receivedData+2,w
   460  0068  118A  21D2  118A   	fcall	_UART_Write
   461                           
   462                           ;main.c: 231: UART_Write(receivedData[3]);
   463  006B  1283               	bcf	3,5	;RP0=0, select bank0
   464  006C  1303               	bcf	3,6	;RP1=0, select bank0
   465  006D  0823               	movf	_receivedData+3,w
   466  006E  118A  21D2  118A   	fcall	_UART_Write
   467                           
   468                           ;main.c: 232: UART_Write(receivedData[4]);
   469  0071  1283               	bcf	3,5	;RP0=0, select bank0
   470  0072  1303               	bcf	3,6	;RP1=0, select bank0
   471  0073  0824               	movf	_receivedData+4,w
   472  0074  118A  21D2  118A   	fcall	_UART_Write
   473                           
   474                           ;main.c: 233: setHBridge();
   475  0077  118A  20FC  118A   	fcall	_setHBridge
   476                           
   477                           ;main.c: 234: newData = 0;
   478  007A  01F7               	clrf	_newData
   479  007B  2856               	goto	l1080
   480                           
   481                           ;main.c: 255: _delay((unsigned long)((500)*(20000000/4000.0)));
   482                           
   483                           ;main.c: 254: PORTCbits.RC6 = 1;
   484                           
   485                           ;main.c: 253: PORTCbits.RC3 = 1;
   486                           
   487                           ;main.c: 252: PORTCbits.RC7 = 0;
   488                           
   489                           ;main.c: 247: }
   490                           ;main.c: 249: }
   491                           ;main.c: 251: while(0){
   492                           
   493                           ;main.c: 246: PORTCbits.RC6 = 1;
   494                           
   495                           ;main.c: 245: PORTCbits.RC3 = ~PORTCbits.RC3;
   496                           
   497                           ;main.c: 244: PORTCbits.RC7 = ~PORTCbits.RC7;
   498                           
   499                           ;main.c: 243: PORTCbits.RC6 = 0;
   500                           
   501                           ;main.c: 241: {
   502                           ;main.c: 242: i=0;
   503                           
   504                           ;main.c: 239: {
   505                           ;main.c: 240: if(i>= 5000)
   506                           
   507                           ;main.c: 235: }
   508                           ;main.c: 236: }
   509                           ;main.c: 238: while(0)
   510  007C  300D               	movlw	13
   511  007D  00B6               	movwf	??_main+2
   512  007E  30AF               	movlw	175
   513  007F  00B5               	movwf	??_main+1
   514  0080  30C1               	movlw	193
   515  0081  00B4               	movwf	??_main
   516  0082                     u777:	
   517  0082  0BB4               	decfsz	??_main,f
   518  0083  2882               	goto	u777
   519  0084  0BB5               	decfsz	??_main+1,f
   520  0085  2882               	goto	u777
   521  0086  0BB6               	decfsz	??_main+2,f
   522  0087  2882               	goto	u777
   523  0088  0000               	nop
   524                           
   525                           ;main.c: 256: PORTCbits.RC6 = 0;
   526  0089  1283               	bcf	3,5	;RP0=0, select bank0
   527  008A  1303               	bcf	3,6	;RP1=0, select bank0
   528  008B  1307               	bcf	7,6	;volatile
   529                           
   530                           ;main.c: 257: PORTCbits.RC7 = 1;
   531  008C  1787               	bsf	7,7	;volatile
   532                           
   533                           ;main.c: 258: PORTCbits.RC3 = 0;
   534  008D  1187               	bcf	7,3	;volatile
   535                           
   536                           ;main.c: 259: PORTCbits.RC6 = 1;
   537  008E  1707               	bsf	7,6	;volatile
   538                           
   539                           ;main.c: 260: _delay((unsigned long)((500)*(20000000/4000.0)));
   540  008F  300D               	movlw	13
   541  0090  00B6               	movwf	??_main+2
   542  0091  30AF               	movlw	175
   543  0092  00B5               	movwf	??_main+1
   544  0093  30C1               	movlw	193
   545  0094  00B4               	movwf	??_main
   546  0095                     u787:	
   547  0095  0BB4               	decfsz	??_main,f
   548  0096  2895               	goto	u787
   549  0097  0BB5               	decfsz	??_main+1,f
   550  0098  2895               	goto	u787
   551  0099  0BB6               	decfsz	??_main+2,f
   552  009A  2895               	goto	u787
   553  009B  0000               	nop
   554                           
   555                           ;main.c: 261: PORTCbits.RC6 = 0;
   556  009C  1283               	bcf	3,5	;RP0=0, select bank0
   557  009D  1303               	bcf	3,6	;RP1=0, select bank0
   558                           
   559                           ;main.c: 276: PORTCbits.RC6 = 0;
   560                           
   561                           ;main.c: 275: PORTCbits.RC1 = 0;
   562                           
   563                           ;main.c: 273: PORTCbits.RC6 = 1;
   564                           
   565                           ;main.c: 272: PORTCbits.RC1 = 1;
   566                           
   567                           ;main.c: 268: }
   568                           ;main.c: 269: }
   569                           ;main.c: 271: while(0){
   570                           
   571                           ;main.c: 267: PORTAbits.RA2 = ~PORTAbits.RA2;
   572                           
   573                           ;main.c: 266: i =0;
   574                           
   575                           ;main.c: 265: if(i>=5000){
   576                           
   577                           ;main.c: 262: }
   578                           ;main.c: 264: while(0){
   579  009E  1307               	bcf	7,6	;volatile
   580  009F                     l1118:	
   581                           ;main.c: 278: }
   582                           ;main.c: 281: while(1){
   583                           
   584                           
   585                           ;main.c: 282: if(newData){
   586  009F  0877               	movf	_newData,w
   587  00A0  1903               	btfsc	3,2
   588  00A1  289F               	goto	l1118
   589                           
   590                           ;main.c: 283: setHBridge();
   591  00A2  118A  20FC  118A   	fcall	_setHBridge
   592                           
   593                           ;main.c: 284: newData = 0;
   594  00A5  01F7               	clrf	_newData
   595  00A6  289F               	goto	l1118
   596  00A7                     __end_of_main:	
   597                           
   598                           	psect	text1
   599  00FC                     __ptext1:	
   600 ;; *************** function _setHBridge *****************
   601 ;; Defined at:
   602 ;;		line 104 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   616 ;;      Params:         0       0       0       0
   617 ;;      Locals:         0       0       0       0
   618 ;;      Temps:          0       1       0       0
   619 ;;      Totals:         0       1       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    3
   623 ;; This function calls:
   624 ;;		_UART_Write
   625 ;;		_UART_Write_Text
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _setHBridge
   633  00FC                     _setHBridge:	
   634                           
   635                           ;main.c: 105: if(receivedData[0] == 'S' && receivedData[3] == 'T')
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _setHBridge: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   639  00FC  3053               	movlw	83
   640  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   641  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   642  00FF  0620               	xorwf	_receivedData,w
   643  0100  1D03               	btfss	3,2
   644  0101  294C               	goto	l1040
   645  0102  3054               	movlw	84
   646  0103  0623               	xorwf	_receivedData+3,w
   647  0104  1D03               	btfss	3,2
   648  0105  294C               	goto	l1040
   649                           
   650                           ;main.c: 106: {
   651                           ;main.c: 107: if((receivedData[1] >> 4) ) {
   652  0106  0821               	movf	_receivedData+1,w
   653  0107  00B3               	movwf	??_setHBridge
   654  0108  3004               	movlw	4
   655  0109                     u605:	
   656  0109  1003               	clrc
   657  010A  0CB3               	rrf	??_setHBridge,f
   658  010B  3EFF               	addlw	-1
   659  010C  1D03               	skipz
   660  010D  2909               	goto	u605
   661  010E  0833               	movf	??_setHBridge,w
   662  010F  1903               	btfsc	3,2
   663  0110  2925               	goto	l136
   664                           
   665                           ;main.c: 110: if(receivedData[1] & 0x01){
   666  0111  1C21               	btfss	_receivedData+1,0
   667  0112  291C               	goto	l1016
   668                           
   669                           ;main.c: 112: UART_Write('F');
   670  0113  3046               	movlw	70
   671  0114  118A  21D2  118A   	fcall	_UART_Write
   672                           
   673                           ;main.c: 114: PORTCbits.RC0 = 0;
   674  0117  1283               	bcf	3,5	;RP0=0, select bank0
   675  0118  1303               	bcf	3,6	;RP1=0, select bank0
   676  0119  1007               	bcf	7,0	;volatile
   677                           
   678                           ;main.c: 115: PORTCbits.RC2 = 1;
   679  011A  1507               	bsf	7,2	;volatile
   680                           
   681                           ;main.c: 117: }else {
   682  011B  2928               	goto	l1022
   683  011C                     l1016:	
   684                           
   685                           ;main.c: 119: UART_Write('B');
   686  011C  3042               	movlw	66
   687  011D  118A  21D2  118A   	fcall	_UART_Write
   688                           
   689                           ;main.c: 121: PORTCbits.RC0 = 1;
   690  0120  1283               	bcf	3,5	;RP0=0, select bank0
   691  0121  1303               	bcf	3,6	;RP1=0, select bank0
   692  0122  1407               	bsf	7,0	;volatile
   693                           
   694                           ;main.c: 122: PORTCbits.RC2 = 0;
   695  0123  1107               	bcf	7,2	;volatile
   696                           
   697                           ;main.c: 124: }
   698                           ;main.c: 126: }else {
   699  0124  2928               	goto	l1022
   700  0125                     l136:	
   701                           
   702                           ;main.c: 128: PORTCbits.RC0 = 0;
   703  0125  1007               	bcf	7,0	;volatile
   704                           
   705                           ;main.c: 129: PORTCbits.RC2 = 0;
   706  0126  1107               	bcf	7,2	;volatile
   707                           
   708                           ;main.c: 130: PORTCbits.RC1 = 0;
   709  0127  1087               	bcf	7,1	;volatile
   710  0128                     l1022:	
   711                           
   712                           ;main.c: 131: }
   713                           ;main.c: 133: if((receivedData[2] >> 4) ) {
   714  0128  0822               	movf	_receivedData+2,w
   715  0129  00B3               	movwf	??_setHBridge
   716  012A  3004               	movlw	4
   717  012B                     u635:	
   718  012B  1003               	clrc
   719  012C  0CB3               	rrf	??_setHBridge,f
   720  012D  3EFF               	addlw	-1
   721  012E  1D03               	skipz
   722  012F  292B               	goto	u635
   723  0130  0833               	movf	??_setHBridge,w
   724  0131  1903               	btfsc	3,2
   725  0132  2948               	goto	l140
   726                           
   727                           ;main.c: 135: PORTCbits.RC6 = 0;
   728  0133  1307               	bcf	7,6	;volatile
   729                           
   730                           ;main.c: 136: if(receivedData[2] & 0x01){
   731  0134  1C22               	btfss	_receivedData+2,0
   732  0135  293F               	goto	l1032
   733                           
   734                           ;main.c: 138: UART_Write('L');
   735  0136  304C               	movlw	76
   736  0137  118A  21D2  118A   	fcall	_UART_Write
   737                           
   738                           ;main.c: 139: PORTCbits.RC7 = 0;
   739  013A  1283               	bcf	3,5	;RP0=0, select bank0
   740  013B  1303               	bcf	3,6	;RP1=0, select bank0
   741  013C  1387               	bcf	7,7	;volatile
   742                           
   743                           ;main.c: 140: PORTCbits.RC3 = 1;
   744  013D  1587               	bsf	7,3	;volatile
   745                           
   746                           ;main.c: 141: }else {
   747  013E  2946               	goto	l1038
   748  013F                     l1032:	
   749                           
   750                           ;main.c: 143: UART_Write('R');
   751  013F  3052               	movlw	82
   752  0140  118A  21D2         	fcall	_UART_Write
   753                           
   754                           ;main.c: 144: PORTCbits.RC7 = 1;
   755  0142  1283               	bcf	3,5	;RP0=0, select bank0
   756  0143  1303               	bcf	3,6	;RP1=0, select bank0
   757  0144  1787               	bsf	7,7	;volatile
   758                           
   759                           ;main.c: 145: PORTCbits.RC3 = 0;
   760  0145  1187               	bcf	7,3	;volatile
   761  0146                     l1038:	
   762                           
   763                           ;main.c: 146: }
   764                           ;main.c: 147: PORTCbits.RC6 = 1;
   765  0146  1707               	bsf	7,6	;volatile
   766                           
   767                           ;main.c: 148: }else {
   768  0147  0008               	return
   769  0148                     l140:	
   770                           
   771                           ;main.c: 150: PORTCbits.RC7 = 0;
   772  0148  1387               	bcf	7,7	;volatile
   773                           
   774                           ;main.c: 151: PORTCbits.RC3 = 0;
   775  0149  1187               	bcf	7,3	;volatile
   776                           
   777                           ;main.c: 152: PORTCbits.RC6 = 0;
   778  014A  1307               	bcf	7,6	;volatile
   779                           
   780                           ;main.c: 153: }
   781                           ;main.c: 156: }
   782  014B  0008               	return
   783  014C                     l1040:	
   784                           
   785                           ;main.c: 158: else {
   786                           ;main.c: 160: UART_Write_Text("ERROR1");
   787  014C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   788  014D  118A  2150         	fcall	_UART_Write_Text
   789  014F  0008               	return
   790  0150                     __end_of_setHBridge:	
   791                           
   792                           	psect	text2
   793  0150                     __ptext2:	
   794 ;; *************** function _UART_Write_Text *****************
   795 ;; Defined at:
   796 ;;		line 96 in file "uart.h"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  text            1    wreg     PTR unsigned char 
   799 ;;		 -> STR_1(7), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  text            1    1[BANK0 ] PTR unsigned char 
   802 ;;		 -> STR_1(7), 
   803 ;;  i               2    2[BANK0 ] int 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   813 ;;      Params:         0       0       0       0
   814 ;;      Locals:         0       3       0       0
   815 ;;      Temps:          0       0       0       0
   816 ;;      Totals:         0       3       0       0
   817 ;;Total ram usage:        3 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		_UART_Write
   822 ;; This function is called by:
   823 ;;		_setHBridge
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _UART_Write_Text
   829  0150                     _UART_Write_Text:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   833                           ;UART_Write_Text@text stored from wreg
   834  0150  1283               	bcf	3,5	;RP0=0, select bank0
   835  0151  1303               	bcf	3,6	;RP1=0, select bank0
   836  0152  00B0               	movwf	UART_Write_Text@text
   837                           
   838                           ;uart.h: 98: int i;
   839                           ;uart.h: 99: for(i=0;text[i]!='\0';i++)
   840  0153  01B1               	clrf	UART_Write_Text@i
   841  0154  01B2               	clrf	UART_Write_Text@i+1
   842  0155                     l1000:	
   843  0155  0831               	movf	UART_Write_Text@i,w
   844  0156  0730               	addwf	UART_Write_Text@text,w
   845  0157  0084               	movwf	4
   846  0158  118A  21B8  118A   	fcall	stringdir
   847  015B  3A00               	xorlw	0
   848  015C  1903               	btfsc	3,2
   849  015D  0008               	return
   850                           
   851                           ;uart.h: 100: UART_Write(text[i]);
   852  015E  0831               	movf	UART_Write_Text@i,w
   853  015F  0730               	addwf	UART_Write_Text@text,w
   854  0160  0084               	movwf	4
   855  0161  118A  21B8  118A   	fcall	stringdir
   856  0164  118A  21D2  118A   	fcall	_UART_Write
   857  0167  3001               	movlw	1
   858  0168  1283               	bcf	3,5	;RP0=0, select bank0
   859  0169  1303               	bcf	3,6	;RP1=0, select bank0
   860  016A  07B1               	addwf	UART_Write_Text@i,f
   861  016B  1803               	skipnc
   862  016C  0AB2               	incf	UART_Write_Text@i+1,f
   863  016D  3000               	movlw	0
   864  016E  07B2               	addwf	UART_Write_Text@i+1,f
   865  016F  2955               	goto	l1000
   866  0170                     __end_of_UART_Write_Text:	
   867                           
   868                           	psect	text3
   869  01D2                     __ptext3:	
   870 ;; *************** function _UART_Write *****************
   871 ;; Defined at:
   872 ;;		line 90 in file "uart.h"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  data            1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  data            1    0[BANK0 ] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   886 ;;      Params:         0       0       0       0
   887 ;;      Locals:         0       1       0       0
   888 ;;      Temps:          0       0       0       0
   889 ;;      Totals:         0       1       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_UART_Write_Text
   897 ;;		_setHBridge
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _UART_Write
   904  01D2                     _UART_Write:	
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _UART_Write: [wreg]
   908                           ;UART_Write@data stored from wreg
   909  01D2  1283               	bcf	3,5	;RP0=0, select bank0
   910  01D3  1303               	bcf	3,6	;RP1=0, select bank0
   911  01D4  00AF               	movwf	UART_Write@data
   912  01D5                     l103:	
   913                           ;uart.h: 92: while(!TRMT);
   914                           
   915  01D5  1683               	bsf	3,5	;RP0=1, select bank1
   916  01D6  1303               	bcf	3,6	;RP1=0, select bank1
   917  01D7  1C98               	btfss	24,1	;volatile
   918  01D8  29D5               	goto	l103
   919                           
   920                           ;uart.h: 93: TXREG = data;
   921  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   922  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   923  01DB  082F               	movf	UART_Write@data,w
   924  01DC  0099               	movwf	25	;volatile
   925  01DD  0008               	return
   926  01DE                     __end_of_UART_Write:	
   927                           
   928                           	psect	text4
   929  0170                     __ptext4:	
   930 ;; *************** function _UART_Init9600 *****************
   931 ;; Defined at:
   932 ;;		line 39 in file "uart.h"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      unsigned char 
   939 ;; Registers used:
   940 ;;		wreg
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   946 ;;      Params:         0       0       0       0
   947 ;;      Locals:         0       0       0       0
   948 ;;      Temps:          0       0       0       0
   949 ;;      Totals:         0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _UART_Init9600
   962  0170                     _UART_Init9600:	
   963                           
   964                           ;uart.h: 54: SPBRG = 10;
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _UART_Init9600: [wreg]
   968  0170  300A               	movlw	10
   969  0171  1683               	bsf	3,5	;RP0=1, select bank1
   970  0172  1303               	bcf	3,6	;RP1=0, select bank1
   971  0173  0099               	movwf	25	;volatile
   972                           
   973                           ;uart.h: 55: BRGH = 1;
   974  0174  1518               	bsf	24,2	;volatile
   975                           
   976                           ;uart.h: 56: SYNC = 0;
   977  0175  1218               	bcf	24,4	;volatile
   978                           
   979                           ;uart.h: 57: SPEN = 1;
   980  0176  1283               	bcf	3,5	;RP0=0, select bank0
   981  0177  1303               	bcf	3,6	;RP1=0, select bank0
   982  0178  1798               	bsf	24,7	;volatile
   983                           
   984                           ;uart.h: 58: TRISB7 = 1;
   985  0179  1683               	bsf	3,5	;RP0=1, select bank1
   986  017A  1303               	bcf	3,6	;RP1=0, select bank1
   987  017B  1786               	bsf	6,7	;volatile
   988                           
   989                           ;uart.h: 59: TRISB5 = 1;
   990  017C  1686               	bsf	6,5	;volatile
   991                           
   992                           ;uart.h: 60: CREN = 1;
   993  017D  1283               	bcf	3,5	;RP0=0, select bank0
   994  017E  1303               	bcf	3,6	;RP1=0, select bank0
   995  017F  1618               	bsf	24,4	;volatile
   996                           
   997                           ;uart.h: 61: TXEN = 1;
   998  0180  1683               	bsf	3,5	;RP0=1, select bank1
   999  0181  1303               	bcf	3,6	;RP1=0, select bank1
  1000  0182  1698               	bsf	24,5	;volatile
  1001                           
  1002                           ;uart.h: 63: RCIE = 1;
  1003  0183  168C               	bsf	12,5	;volatile
  1004                           
  1005                           ;uart.h: 64: PEIE = 1;
  1006  0184  170B               	bsf	11,6	;volatile
  1007  0185  0008               	return
  1008  0186                     __end_of_UART_Init9600:	
  1009                           
  1010                           	psect	text5
  1011  0186                     __ptext5:	
  1012 ;; *************** function _InitTimer1 *****************
  1013 ;; Defined at:
  1014 ;;		line 167 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1028 ;;      Params:         0       0       0       0
  1029 ;;      Locals:         0       0       0       0
  1030 ;;      Temps:          0       1       0       0
  1031 ;;      Totals:         0       1       0       0
  1032 ;;Total ram usage:        1 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _InitTimer1
  1044  0186                     _InitTimer1:	
  1045                           
  1046                           ;main.c: 168: T1CON = 0x01;
  1047                           
  1048                           ;incstack = 0
  1049                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
  1050  0186  3001               	movlw	1
  1051  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0189  0090               	movwf	16	;volatile
  1054                           
  1055                           ;main.c: 169: TMR1IF = 0;
  1056  018A  100C               	bcf	12,0	;volatile
  1057                           
  1058                           ;main.c: 170: TMR1H = 0xFc;
  1059  018B  30FC               	movlw	252
  1060  018C  008F               	movwf	15	;volatile
  1061                           
  1062                           ;main.c: 171: TMR1L = 0x18;
  1063  018D  3018               	movlw	24
  1064  018E  008E               	movwf	14	;volatile
  1065                           
  1066                           ;main.c: 172: TMR1IE = 1;
  1067  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1068  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1069  0191  140C               	bsf	12,0	;volatile
  1070                           
  1071                           ;main.c: 173: INTCON |= 0xC0;
  1072  0192  30C0               	movlw	192
  1073  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0195  00AF               	movwf	??_InitTimer1
  1076  0196  082F               	movf	??_InitTimer1,w
  1077  0197  048B               	iorwf	11,f	;volatile
  1078  0198  0008               	return
  1079  0199                     __end_of_InitTimer1:	
  1080                           
  1081                           	psect	text6
  1082  01C5                     __ptext6:	
  1083 ;; *************** function _InitTimer0 *****************
  1084 ;; Defined at:
  1085 ;;		line 179 in file "main.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1099 ;;      Params:         0       0       0       0
  1100 ;;      Locals:         0       0       0       0
  1101 ;;      Temps:          0       1       0       0
  1102 ;;      Totals:         0       1       0       0
  1103 ;;Total ram usage:        1 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _InitTimer0
  1115  01C5                     _InitTimer0:	
  1116                           
  1117                           ;main.c: 180: OPTION_REG = 0x83;
  1118                           
  1119                           ;incstack = 0
  1120                           ; Regs used in _InitTimer0: [wreg+status,2+status,0]
  1121  01C5  3083               	movlw	131
  1122  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1123  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1124  01C8  0081               	movwf	1	;volatile
  1125                           
  1126                           ;main.c: 181: TMR0 = 6;
  1127  01C9  3006               	movlw	6
  1128  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1129  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1130  01CC  0081               	movwf	1	;volatile
  1131                           
  1132                           ;main.c: 182: INTCON |= 0xA0;
  1133  01CD  30A0               	movlw	160
  1134  01CE  00AF               	movwf	??_InitTimer0
  1135  01CF  082F               	movf	??_InitTimer0,w
  1136  01D0  048B               	iorwf	11,f	;volatile
  1137  01D1  0008               	return
  1138  01D2                     __end_of_InitTimer0:	
  1139                           
  1140                           	psect	text7
  1141  00A7                     __ptext7:	
  1142 ;; *************** function _tc_int *****************
  1143 ;; Defined at:
  1144 ;;		line 64 in file "main.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1158 ;;      Params:         0       0       0       0
  1159 ;;      Locals:         0       0       0       0
  1160 ;;      Temps:          5       0       0       0
  1161 ;;      Totals:         5       0       0       0
  1162 ;;Total ram usage:        5 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		Interrupt level 1
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _tc_int
  1173  00A7                     _tc_int:	
  1174                           
  1175                           ;main.c: 65: if (T0IF){
  1176  00A7  1D0B               	btfss	11,2	;volatile
  1177  00A8  28BA               	goto	i1l123
  1178                           
  1179                           ;main.c: 67: T0IF = 0;
  1180  00A9  110B               	bcf	11,2	;volatile
  1181                           
  1182                           ;main.c: 68: TMR0 = 6;
  1183  00AA  3006               	movlw	6
  1184  00AB  0081               	movwf	1	;volatile
  1185                           
  1186                           ;main.c: 71: TMR1IF = 0;
  1187  00AC  100C               	bcf	12,0	;volatile
  1188                           
  1189                           ;main.c: 72: TMR1H = 0xFc;
  1190  00AD  30FC               	movlw	252
  1191  00AE  008F               	movwf	15	;volatile
  1192                           
  1193                           ;main.c: 73: TMR1L = 0x18;
  1194  00AF  3018               	movlw	24
  1195  00B0  008E               	movwf	14	;volatile
  1196                           
  1197                           ;main.c: 74: TMR1ON = 1;
  1198  00B1  1410               	bsf	16,0	;volatile
  1199                           
  1200                           ;main.c: 75: i++;
  1201  00B2  3001               	movlw	1
  1202  00B3  07F5               	addwf	_i,f
  1203  00B4  1803               	skipnc
  1204  00B5  0AF6               	incf	_i+1,f
  1205  00B6  3000               	movlw	0
  1206  00B7  07F6               	addwf	_i+1,f
  1207                           
  1208                           ;main.c: 76: PORTCbits.RC1 = 1;
  1209  00B8  1487               	bsf	7,1	;volatile
  1210                           
  1211                           ;main.c: 78: }
  1212  00B9  28F1               	goto	i1l132
  1213  00BA                     i1l123:	
  1214                           
  1215                           ;main.c: 79: else if (TMR1IF){
  1216  00BA  1C0C               	btfss	12,0	;volatile
  1217  00BB  28C0               	goto	i1l125
  1218                           
  1219                           ;main.c: 80: TMR1IF = 0;
  1220  00BC  100C               	bcf	12,0	;volatile
  1221                           
  1222                           ;main.c: 81: TMR1ON = 0;
  1223  00BD  1010               	bcf	16,0	;volatile
  1224                           
  1225                           ;main.c: 84: PORTCbits.RC1 = 0;
  1226  00BE  1087               	bcf	7,1	;volatile
  1227                           
  1228                           ;main.c: 86: } else if(RCIF){
  1229  00BF  28F1               	goto	i1l132
  1230  00C0                     i1l125:	
  1231  00C0  1E8C               	btfss	12,5	;volatile
  1232  00C1  28F1               	goto	i1l132
  1233                           
  1234                           ;main.c: 87: tmpChar = RCREG;
  1235  00C2  081A               	movf	26,w	;volatile
  1236  00C3  00F0               	movwf	??_tc_int
  1237  00C4  0870               	movf	??_tc_int,w
  1238  00C5  00F8               	movwf	_tmpChar
  1239                           
  1240                           ;main.c: 88: if(tmpChar == 'S' && newData == 0){
  1241  00C6  3053               	movlw	83
  1242  00C7  0678               	xorwf	_tmpChar,w
  1243  00C8  1D03               	btfss	3,2
  1244  00C9  28D6               	goto	i1l790
  1245  00CA  0877               	movf	_newData,w
  1246  00CB  1D03               	btfss	3,2
  1247  00CC  28D6               	goto	i1l790
  1248                           
  1249                           ;main.c: 89: i = 1;
  1250  00CD  3001               	movlw	1
  1251  00CE  00F5               	movwf	_i
  1252  00CF  3000               	movlw	0
  1253  00D0  00F6               	movwf	_i+1
  1254                           
  1255                           ;main.c: 90: receivedData[0] = tmpChar;
  1256  00D1  0878               	movf	_tmpChar,w
  1257  00D2  00F0               	movwf	??_tc_int
  1258  00D3  0870               	movf	??_tc_int,w
  1259  00D4  00A0               	movwf	_receivedData
  1260                           
  1261                           ;main.c: 91: }else if(tmpChar == 'T'){
  1262  00D5  28F1               	goto	i1l132
  1263  00D6                     i1l790:	
  1264  00D6  3054               	movlw	84
  1265  00D7  0678               	xorwf	_tmpChar,w
  1266  00D8  1D03               	btfss	3,2
  1267  00D9  28E3               	goto	i1l798
  1268                           
  1269                           ;main.c: 92: receivedData[3] = tmpChar;
  1270  00DA  0878               	movf	_tmpChar,w
  1271  00DB  00F0               	movwf	??_tc_int
  1272  00DC  0870               	movf	??_tc_int,w
  1273  00DD  00A3               	movwf	_receivedData+3
  1274                           
  1275                           ;main.c: 93: i=0;
  1276  00DE  01F5               	clrf	_i
  1277  00DF  01F6               	clrf	_i+1
  1278                           
  1279                           ;main.c: 94: newData=1;
  1280  00E0  01F7               	clrf	_newData
  1281  00E1  0AF7               	incf	_newData,f
  1282                           
  1283                           ;main.c: 95: }
  1284  00E2  28F1               	goto	i1l132
  1285  00E3                     i1l798:	
  1286                           
  1287                           ;main.c: 96: else{
  1288                           ;main.c: 97: receivedData[i] = RCREG;
  1289  00E3  081A               	movf	26,w	;volatile
  1290  00E4  00F0               	movwf	??_tc_int
  1291  00E5  0875               	movf	_i,w
  1292  00E6  3E20               	addlw	(low (_receivedData| 0))& (0+255)
  1293  00E7  0084               	movwf	4
  1294  00E8  0870               	movf	??_tc_int,w
  1295  00E9  1383               	bcf	3,7	;select IRP bank0
  1296  00EA  0080               	movwf	0
  1297                           
  1298                           ;main.c: 98: i++;
  1299  00EB  3001               	movlw	1
  1300  00EC  07F5               	addwf	_i,f
  1301  00ED  1803               	skipnc
  1302  00EE  0AF6               	incf	_i+1,f
  1303  00EF  3000               	movlw	0
  1304  00F0  07F6               	addwf	_i+1,f
  1305  00F1                     i1l132:	
  1306  00F1  0874               	movf	??_tc_int+4,w
  1307  00F2  00FF               	movwf	127
  1308  00F3  0873               	movf	??_tc_int+3,w
  1309  00F4  008A               	movwf	10
  1310  00F5  0872               	movf	??_tc_int+2,w
  1311  00F6  0084               	movwf	4
  1312  00F7  0E71               	swapf	(??_tc_int+1)^(0+-128),w
  1313  00F8  0083               	movwf	3
  1314  00F9  0EFE               	swapf	126,f
  1315  00FA  0E7E               	swapf	126,w
  1316  00FB  0009               	retfie
  1317  00FC                     __end_of_tc_int:	
  1318  007E                     btemp	set	126	;btemp
  1319  007E                     wtemp	set	126
  1320  007E                     wtemp0	set	126
  1321  0080                     wtemp1	set	128
  1322  0082                     wtemp2	set	130
  1323  0084                     wtemp3	set	132
  1324  0086                     wtemp4	set	134
  1325  0088                     wtemp5	set	136
  1326  007F                     wtemp6	set	127
  1327  007E                     ttemp	set	126
  1328  007E                     ttemp0	set	126
  1329  0081                     ttemp1	set	129
  1330  0084                     ttemp2	set	132
  1331  0087                     ttemp3	set	135
  1332  007F                     ttemp4	set	127
  1333  007E                     ltemp	set	126
  1334  007E                     ltemp0	set	126
  1335  0082                     ltemp1	set	130
  1336  0086                     ltemp2	set	134
  1337  0080                     ltemp3	set	128
  1338                           
  1339                           	psect	intentry
  1340  0004                     __pintentry:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0]
  1343                           
  1344  0004                     interrupt_function:	
  1345  007E                     saved_w	set	btemp
  1346  0004  00FE               	movwf	btemp
  1347  0005  0E03               	swapf	3,w
  1348  0006  00F1               	movwf	??_tc_int+1
  1349  0007  0804               	movf	4,w
  1350  0008  00F2               	movwf	??_tc_int+2
  1351  0009  080A               	movf	10,w
  1352  000A  00F3               	movwf	??_tc_int+3
  1353  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1354  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1355  000D  087F               	movf	btemp+1,w
  1356  000E  00F4               	movwf	??_tc_int+4
  1357  000F  118A  28A7         	ljmp	_tc_int


Data Sizes:
    Strings     7
    Constant    0
    Data        15
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      8      23
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setHBridge
    _setHBridge->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     229
                                              5 BANK0      3     3      0
                         _InitTimer0
                         _InitTimer1
                      _UART_Init9600
                         _UART_Write
                         _setHBridge
 ---------------------------------------------------------------------------------
 (1) _setHBridge                                           1     1      0     207
                                              4 BANK0      1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      3     3      0     185
                                              1 BANK0      3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init9600                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tc_int                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _InitTimer1
   _UART_Init9600
   _UART_Write
   _setHBridge
     _UART_Write
     _UART_Write_Text
       _UART_Write

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      17       3       28.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      10        0.0%
ABS                  0      0      20       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Feb 08 19:54:23 2017

                       _i 0075                         pc 0002               __CFG_CP$OFF 0000  
                      fsr 0004                       l103 01D5                       l140 0148  
                     l136 0125                       _GIE 005F              __CFG_CPD$OFF 0000  
                     u605 0109                       u635 012B                       u767 003D  
                     u777 0082                       u787 0095                       fsr0 0004  
                     indf 0000              __CFG_IESO$ON 0000              __CFG_FOSC$HS 0000  
                    l1000 0155                      l1022 0128                      l1032 013F  
                    l1016 011C                      l1040 014C                      l1038 0146  
                    l1118 009F                      l1080 0056                      STR_1 01BE  
                    _BRGH 04C2                      _T0IF 005A                      _CREN 00C4  
                    _PEIE 005E                      _RCIE 0465                      _RCIF 0065  
                    _TMR0 0001                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4             __CFG_FCMEN$ON 0000  
                    _main 0025                      btemp 007E             __CFG_BOREN$ON 0000  
                    ltemp 007E                      start 0011                      ttemp 007E  
                    wtemp 007E             __CFG_MCLRE$ON 0000   __end_of_UART_Write_Text 0170  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 011E  
                   _T1CON 0010                     i1l123 00BA                     i1l132 00F1  
                   i1l125 00C0                     i1l790 00D6                     i1l798 00E3  
                   _RCREG 001A                     _TMR1H 000F                     _TMR1L 000E  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TXREG 0019               ?_UART_Write 0070  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 0013                _InitTimer0 01C5                _InitTimer1 0186  
            __end_of_main 00A7                    ??_main 0034                    _ANSELH 011F  
                  _INTCON 000B                    _TMR1IE 0460                    _TMR1IF 0060  
                  _TMR1ON 0080                    _TRISB5 0435                    _TRISB7 0437  
          __CFG_PWRTE$OFF 0000       __size_of_UART_Write 000C          ?_UART_Write_Text 0070  
                  _tc_int 00A7     __end_of_UART_Init9600 0186                    saved_w 007E  
 __end_of__initialization 0022               ?_InitTimer0 0070               ?_InitTimer1 0070  
          __pcstackCOMMON 0070              __pidataBANK0 01A9                __pmaintext 0025  
              __pintentry 0004                   ?_tc_int 0070              ??_UART_Write 0075  
     __size_of_InitTimer0 000D       __size_of_InitTimer1 0013                __stringtab 01B8  
      __end_of_UART_Write 01DE           __size_of_tc_int 0055                   __ptext1 00FC  
                 __ptext2 0150                   __ptext3 01D2                   __ptext4 0170  
                 __ptext5 0186                   __ptext6 01C5                   __ptext7 00A7  
              _setHBridge 00FC                   _newData 0077                   _tmpChar 0078  
    end_of_initialization 0022                 _PORTAbits 0005                 _PORTCbits 0007  
          UART_Write@data 002F              ??_InitTimer0 002F              ??_InitTimer1 002F  
          __end_of_tc_int 00FC               ?_setHBridge 0070  __size_of_UART_Write_Text 0020  
     start_initialization 0013        __end_of_InitTimer0 01D2        __end_of_InitTimer1 0199  
  __size_of_UART_Init9600 0016                init_fetch0 0199               __pdataBANK0 0020  
                ??_tc_int 0070               __pbssCOMMON 0075                 ___latbits 0001  
           __pcstackBANK0 002F       __size_of_setHBridge 0054                 __pstrings 01B8  
           _UART_Init9600 0170         ??_UART_Write_Text 0075              _receivedData 0020  
       interrupt_function 0004                _ADCON0bits 001F               __stringbase 01BD  
          ?_UART_Init9600 0070        __end_of__stringtab 01BE              ??_setHBridge 0033  
     UART_Write_Text@text 0030             __size_of_main 0082        __end_of_setHBridge 0150  
         ??_UART_Init9600 0075                  init_ram0 019D                  intlevel1 0000  
               stringcode 01B8           _UART_Write_Text 0150                _OPTION_REG 0081  
                stringdir 01B8                  stringtab 01B8                _UART_Write 01D2  
        UART_Write_Text@i 0031  
