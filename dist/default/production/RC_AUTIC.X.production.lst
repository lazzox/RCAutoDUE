

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Feb 08 05:47:32 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F689
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001E                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  0087                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  008F                     	;# 
    52  0090                     	;# 
    53  0093                     	;# 
    54  0093                     	;# 
    55  0093                     	;# 
    56  0094                     	;# 
    57  0095                     	;# 
    58  0095                     	;# 
    59  0096                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011A                     	;# 
    78  011B                     	;# 
    79  011E                     	;# 
    80  011F                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  019E                     	;# 
    84                           
    85                           	psect	idataBANK0
    86  0147                     __pidataBANK0:	
    87                           
    88                           ;initializer for _receivedData
    89  0147  3430               	retlw	48
    90  0148  3400               	retlw	0
    91  0149  3400               	retlw	0
    92  014A  3400               	retlw	0
    93  001F                     _ADCON0bits	set	31
    94  000B                     _INTCON	set	11
    95  0005                     _PORTA	set	5
    96  0005                     _PORTAbits	set	5
    97  0006                     _PORTB	set	6
    98  0007                     _PORTC	set	7
    99  0007                     _PORTCbits	set	7
   100  001A                     _RCREG	set	26
   101  0010                     _T1CON	set	16
   102  0001                     _TMR0	set	1
   103  000F                     _TMR1H	set	15
   104  000E                     _TMR1L	set	14
   105  0019                     _TXREG	set	25
   106  00C4                     _CREN	set	196
   107  005F                     _GIE	set	95
   108  0065                     _RCIF	set	101
   109  00C7                     _SPEN	set	199
   110  005A                     _T0IF	set	90
   111  0060                     _TMR1IF	set	96
   112  0080                     _TMR1ON	set	128
   113  0081                     _OPTION_REG	set	129
   114  0099                     _SPBRG	set	153
   115  0085                     _TRISA	set	133
   116  0086                     _TRISB	set	134
   117  0087                     _TRISC	set	135
   118  04C2                     _BRGH	set	1218
   119  0465                     _RCIE	set	1125
   120  04C4                     _SYNC	set	1220
   121  0460                     _TMR1IE	set	1120
   122  043E                     _TRISC6	set	1086
   123  043F                     _TRISC7	set	1087
   124  04C1                     _TRMT	set	1217
   125  04C5                     _TXEN	set	1221
   126  011E                     _ANSEL	set	286
   127                           
   128                           	psect	strings
   129  011B                     __pstrings:	
   130  011B                     stringtab:	
   131  011B                     __stringtab:	
   132  011B                     stringcode:	
   133                           ;	String table - string pointers are 1 byte each
   134                           
   135  011B                     stringdir:	
   136  011B  3001               	movlw	high stringdir
   137  011C  008A               	movwf	10
   138  011D  0804               	movf	4,w
   139  011E  0A84               	incf	4,f
   140  011F  0782               	addwf	2,f
   141  0120                     __stringbase:	
   142  0120  3400               	retlw	0
   143  0121                     __end_of__stringtab:	
   144  0121                     STR_1:	
   145  0121  3445               	retlw	69	;'E'
   146  0122  3452               	retlw	82	;'R'
   147  0123  3452               	retlw	82	;'R'
   148  0124  344F               	retlw	79	;'O'
   149  0125  3452               	retlw	82	;'R'
   150  0126  3431               	retlw	49	;'1'
   151  0127  3400               	retlw	0
   152                           
   153                           ; #config settings
   154  0000                     
   155                           	psect	cinit
   156  0013                     start_initialization:	
   157  0013                     __initialization:	
   158                           
   159                           ; Clear objects allocated to BANK0
   160  0013  01AA               	clrf	__pbssBANK0& (0+127)
   161  0014  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   162  0015  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   163                           
   164                           ; Initialize objects allocated to BANK0
   165  0016  118A  2147  118A   	fcall	__pidataBANK0	;fetch initializer
   166  0019  00A6               	movwf	__pdataBANK0& (0+127)
   167  001A  118A  2148  118A   	fcall	__pidataBANK0+1	;fetch initializer
   168  001D  00A7               	movwf	(__pdataBANK0+1)& (0+127)
   169  001E  118A  2149  118A   	fcall	__pidataBANK0+2	;fetch initializer
   170  0021  00A8               	movwf	(__pdataBANK0+2)& (0+127)
   171  0022  118A  214A         	fcall	__pidataBANK0+3	;fetch initializer
   172  0024  00A9               	movwf	(__pdataBANK0+3)& (0+127)
   173  0025                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176  0025                     __end_of__initialization:	
   177  0025  0183               	clrf	3
   178  0026  118A  2828         	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	bssBANK0
   181  002A                     __pbssBANK0:	
   182  002A                     _i:	
   183  002A                     	ds	2
   184  002C                     _newData:	
   185  002C                     	ds	1
   186                           
   187                           	psect	dataBANK0
   188  0026                     __pdataBANK0:	
   189  0026                     _receivedData:	
   190  0026                     	ds	4
   191                           
   192                           	psect	cstackCOMMON
   193  0070                     __pcstackCOMMON:	
   194  0070                     ?_UART_Write:	
   195  0070                     ?_UART_Write_Text:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_tc_int:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_setHBridge:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_InitTimer1:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_InitTimer0:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?i1_UART_Write:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ??i1_UART_Write:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     i1UART_Write@data:	
   220                           ; 1 bytes @ 0x0
   221                           
   222                           
   223                           ; 1 bytes @ 0x0
   224  0070                     	ds	1
   225  0071                     ??_tc_int:	
   226                           
   227                           ; 1 bytes @ 0x1
   228  0071                     	ds	5
   229  0076                     ??_UART_Write:	
   230  0076                     ??_InitTimer1:	
   231                           ; 1 bytes @ 0x6
   232                           
   233  0076                     ??_InitTimer0:	
   234                           ; 1 bytes @ 0x6
   235                           
   236  0076                     UART_Write@data:	
   237                           ; 1 bytes @ 0x6
   238                           
   239                           
   240                           ; 1 bytes @ 0x6
   241  0076                     	ds	1
   242  0077                     ??_UART_Write_Text:	
   243  0077                     ??_setHBridge:	
   244                           ; 1 bytes @ 0x7
   245                           
   246                           
   247                           ; 1 bytes @ 0x7
   248  0077                     	ds	1
   249                           
   250                           	psect	cstackBANK0
   251  0020                     __pcstackBANK0:	
   252  0020                     UART_Write_Text@i:	
   253                           
   254                           ; 2 bytes @ 0x0
   255  0020                     	ds	2
   256  0022                     UART_Write_Text@text:	
   257                           
   258                           ; 1 bytes @ 0x2
   259  0022                     	ds	1
   260  0023                     ??_main:	
   261                           
   262                           ; 1 bytes @ 0x3
   263  0023                     	ds	3
   264                           
   265                           	psect	maintext
   266  0028                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 170 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   286 ;;      Params:         0       0       0       0
   287 ;;      Locals:         0       0       0       0
   288 ;;      Temps:          0       3       0       0
   289 ;;      Totals:         0       3       0       0
   290 ;;Total ram usage:        3 bytes
   291 ;; Hardware stack levels required when called:    5
   292 ;; This function calls:
   293 ;;		_InitTimer0
   294 ;;		_InitTimer1
   295 ;;		_setHBridge
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _main
   303  0028                     _main:	
   304                           
   305                           ;main.c: 173: ANSEL = 0b00000000;
   306                           
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   309  0028  1283               	bcf	3,5	;RP0=0, select bank2
   310  0029  1703               	bsf	3,6	;RP1=1, select bank2
   311  002A  019E               	clrf	30	;volatile
   312                           
   313                           ;main.c: 175: ADCON0bits.ADON = 0;
   314  002B  1283               	bcf	3,5	;RP0=0, select bank0
   315  002C  1303               	bcf	3,6	;RP1=0, select bank0
   316  002D  101F               	bcf	31,0	;volatile
   317                           
   318                           ;main.c: 178: TRISA = 0x00;
   319  002E  1683               	bsf	3,5	;RP0=1, select bank1
   320  002F  1303               	bcf	3,6	;RP1=0, select bank1
   321  0030  0185               	clrf	5	;volatile
   322                           
   323                           ;main.c: 179: TRISB = 0x00;
   324  0031  0186               	clrf	6	;volatile
   325                           
   326                           ;main.c: 180: TRISC = 0x00;
   327  0032  0187               	clrf	7	;volatile
   328                           
   329                           ;main.c: 182: PORTA = 0x00;
   330  0033  1283               	bcf	3,5	;RP0=0, select bank0
   331  0034  1303               	bcf	3,6	;RP1=0, select bank0
   332  0035  0185               	clrf	5	;volatile
   333                           
   334                           ;main.c: 183: PORTB = 0x00;
   335  0036  0186               	clrf	6	;volatile
   336                           
   337                           ;main.c: 184: PORTC = 0x00;
   338  0037  0187               	clrf	7	;volatile
   339                           
   340                           ;main.c: 185: PORTAbits.RA2 = 1;
   341  0038  1505               	bsf	5,2	;volatile
   342                           
   343                           ;main.c: 186: _delay((unsigned long)((5000)*(4000000/4000.0)));
   344  0039  301A               	movlw	26
   345  003A  00A5               	movwf	??_main+2
   346  003B  305E               	movlw	94
   347  003C  00A4               	movwf	??_main+1
   348  003D  3086               	movlw	134
   349  003E  00A3               	movwf	??_main
   350  003F                     u497:	
   351  003F  0BA3               	decfsz	??_main,f
   352  0040  283F               	goto	u497
   353  0041  0BA4               	decfsz	??_main+1,f
   354  0042  283F               	goto	u497
   355  0043  0BA5               	decfsz	??_main+2,f
   356  0044  283F               	goto	u497
   357  0045  0000               	nop
   358                           
   359                           ;main.c: 187: PORTAbits.RA2 = 0;
   360  0046  1283               	bcf	3,5	;RP0=0, select bank0
   361  0047  1303               	bcf	3,6	;RP1=0, select bank0
   362  0048  1105               	bcf	5,2	;volatile
   363                           
   364                           ;main.c: 189: InitTimer0();
   365  0049  118A  2128  118A   	fcall	_InitTimer0
   366                           
   367                           ;main.c: 190: InitTimer1();
   368  004C  118A  210A  118A   	fcall	_InitTimer1
   369                           
   370                           ;main.c: 204: GIE = 1;
   371  004F  178B               	bsf	11,7	;volatile
   372                           
   373                           ;main.c: 207: PORTCbits.RC1 = 0;
   374  0050  1283               	bcf	3,5	;RP0=0, select bank0
   375  0051  1303               	bcf	3,6	;RP1=0, select bank0
   376  0052  1087               	bcf	7,1	;volatile
   377                           
   378                           ;main.c: 208: PORTCbits.RC6 = 0;
   379  0053  1307               	bcf	7,6	;volatile
   380                           
   381                           ;main.c: 209: PORTCbits.RC0 = 1;
   382  0054  1407               	bsf	7,0	;volatile
   383                           
   384                           ;main.c: 210: PORTCbits.RC2 = 0;
   385  0055  1107               	bcf	7,2	;volatile
   386                           
   387                           ;main.c: 211: PORTCbits.RC7 = 1;
   388  0056  1787               	bsf	7,7	;volatile
   389                           
   390                           ;main.c: 212: PORTCbits.RC3 = 0;
   391  0057  1187               	bcf	7,3	;volatile
   392  0058                     l147:	
   393                           ;main.c: 214: while(1){
   394                           
   395  0058  2858               	goto	l147
   396  0059                     l921:	
   397                           ;main.c: 222: }
   398                           ;main.c: 223: }
   399                           ;main.c: 225: while(1){
   400                           
   401                           ;main.c: 221: PORTAbits.RA2 = ~PORTAbits.RA2;
   402                           
   403                           ;main.c: 220: i =0;
   404                           
   405                           ;main.c: 219: if(i>=5000){
   406                           
   407                           ;main.c: 216: }
   408                           ;main.c: 218: while(0){
   409                           
   410                           
   411                           ;main.c: 226: PORTCbits.RC1 = 1;
   412  0059  1283               	bcf	3,5	;RP0=0, select bank0
   413  005A  1303               	bcf	3,6	;RP1=0, select bank0
   414  005B  1487               	bsf	7,1	;volatile
   415                           
   416                           ;main.c: 227: PORTCbits.RC6 = 1;
   417  005C  1707               	bsf	7,6	;volatile
   418                           
   419                           ;main.c: 228: _delay((unsigned long)((400)*(4000000/4000000.0)));
   420  005D  3085               	movlw	133
   421  005E  00A3               	movwf	??_main
   422  005F                     u507:	
   423  005F  0BA3               	decfsz	??_main,f
   424  0060  285F               	goto	u507
   425                           
   426                           ;main.c: 229: PORTCbits.RC1 = 0;
   427  0061  1283               	bcf	3,5	;RP0=0, select bank0
   428  0062  1303               	bcf	3,6	;RP1=0, select bank0
   429  0063  1087               	bcf	7,1	;volatile
   430                           
   431                           ;main.c: 230: PORTCbits.RC6 = 1;
   432  0064  1707               	bsf	7,6	;volatile
   433                           
   434                           ;main.c: 231: _delay((unsigned long)((400)*(4000000/4000000.0)));
   435  0065  3085               	movlw	133
   436  0066  00A3               	movwf	??_main
   437  0067                     u517:	
   438  0067  0BA3               	decfsz	??_main,f
   439  0068  2867               	goto	u517
   440  0069  2859               	goto	l921
   441  006A                     l933:	
   442                           ;main.c: 232: }
   443                           ;main.c: 235: while(1){
   444                           
   445                           
   446                           ;main.c: 236: if(newData){
   447  006A  1283               	bcf	3,5	;RP0=0, select bank0
   448  006B  1303               	bcf	3,6	;RP1=0, select bank0
   449  006C  082C               	movf	_newData,w
   450  006D  1903               	btfsc	3,2
   451  006E  286A               	goto	l933
   452                           
   453                           ;main.c: 237: setHBridge();
   454  006F  118A  20B3  118A   	fcall	_setHBridge
   455                           
   456                           ;main.c: 238: newData = 0;
   457  0072  1283               	bcf	3,5	;RP0=0, select bank0
   458  0073  1303               	bcf	3,6	;RP1=0, select bank0
   459  0074  01AC               	clrf	_newData
   460  0075  286A               	goto	l933
   461  0076                     __end_of_main:	
   462                           
   463                           	psect	text1
   464  00B3                     __ptext1:	
   465 ;; *************** function _setHBridge *****************
   466 ;; Defined at:
   467 ;;		line 99 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   481 ;;      Params:         0       0       0       0
   482 ;;      Locals:         0       0       0       0
   483 ;;      Temps:          1       0       0       0
   484 ;;      Totals:         1       0       0       0
   485 ;;Total ram usage:        1 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    4
   488 ;; This function calls:
   489 ;;		_UART_Write_Text
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _setHBridge
   497  00B3                     _setHBridge:	
   498                           
   499                           ;main.c: 100: if(receivedData[0] == 'S' && receivedData[3] == 'T')
   500                           
   501                           ;incstack = 0
   502                           ; Regs used in _setHBridge: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   503  00B3  3053               	movlw	83
   504  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   505  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   506  00B6  0626               	xorwf	_receivedData,w
   507  00B7  1D03               	btfss	3,2
   508  00B8  28E6               	goto	l845
   509  00B9  3054               	movlw	84
   510  00BA  0629               	xorwf	_receivedData+3,w
   511  00BB  1D03               	btfss	3,2
   512  00BC  28E6               	goto	l845
   513                           
   514                           ;main.c: 101: {
   515                           ;main.c: 102: if((receivedData[1] >> 4) ) {
   516  00BD  0827               	movf	_receivedData+1,w
   517  00BE  00F7               	movwf	??_setHBridge
   518  00BF  3004               	movlw	4
   519  00C0                     u345:	
   520  00C0  1003               	clrc
   521  00C1  0CF7               	rrf	??_setHBridge,f
   522  00C2  3EFF               	addlw	-1
   523  00C3  1D03               	skipz
   524  00C4  28C0               	goto	u345
   525  00C5  0877               	movf	??_setHBridge,w
   526  00C6  1903               	btfsc	3,2
   527  00C7  28D0               	goto	l129
   528                           
   529                           ;main.c: 104: PORTCbits.RC1 = 0;
   530  00C8  1087               	bcf	7,1	;volatile
   531                           
   532                           ;main.c: 105: if(receivedData[1] && 0x01){
   533  00C9  0827               	movf	_receivedData+1,w
   534  00CA  1903               	btfsc	3,2
   535  00CB  28CC               	goto	l130
   536  00CC                     l130:	
   537                           ;main.c: 109: }else {
   538                           
   539                           ;main.c: 108: PORTCbits.RC2 = 1;
   540                           
   541                           ;main.c: 107: PORTCbits.RC0 = 0;
   542                           
   543                           
   544                           ;main.c: 111: PORTCbits.RC0 = 0;
   545  00CC  1007               	bcf	7,0	;volatile
   546                           
   547                           ;main.c: 112: PORTCbits.RC2 = 1;
   548  00CD  1507               	bsf	7,2	;volatile
   549                           
   550                           ;main.c: 113: }
   551                           ;main.c: 114: PORTCbits.RC1 = 1;
   552  00CE  1487               	bsf	7,1	;volatile
   553                           
   554                           ;main.c: 115: }else {
   555  00CF  28D1               	goto	l837
   556  00D0                     l129:	
   557                           
   558                           ;main.c: 117: PORTCbits.RC1 = 0;
   559  00D0  1087               	bcf	7,1	;volatile
   560  00D1                     l837:	
   561                           
   562                           ;main.c: 118: }
   563                           ;main.c: 120: if((receivedData[2] >> 4) ) {
   564  00D1  0828               	movf	_receivedData+2,w
   565  00D2  00F7               	movwf	??_setHBridge
   566  00D3  3004               	movlw	4
   567  00D4                     u375:	
   568  00D4  1003               	clrc
   569  00D5  0CF7               	rrf	??_setHBridge,f
   570  00D6  3EFF               	addlw	-1
   571  00D7  1D03               	skipz
   572  00D8  28D4               	goto	u375
   573  00D9  0877               	movf	??_setHBridge,w
   574  00DA  1903               	btfsc	3,2
   575  00DB  28E4               	goto	l133
   576                           
   577                           ;main.c: 122: PORTCbits.RC6 = 0;
   578  00DC  1307               	bcf	7,6	;volatile
   579                           
   580                           ;main.c: 123: if(receivedData[1] && 0x01){
   581  00DD  0827               	movf	_receivedData+1,w
   582  00DE  1903               	btfsc	3,2
   583  00DF  28E0               	goto	l134
   584  00E0                     l134:	
   585                           ;main.c: 127: }else {
   586                           
   587                           ;main.c: 126: PORTCbits.RC3 = 1;
   588                           
   589                           ;main.c: 125: PORTCbits.RC7 = 0;
   590                           
   591                           
   592                           ;main.c: 129: PORTCbits.RC7 = 0;
   593  00E0  1387               	bcf	7,7	;volatile
   594                           
   595                           ;main.c: 130: PORTCbits.RC3 = 1;
   596  00E1  1587               	bsf	7,3	;volatile
   597                           
   598                           ;main.c: 131: }
   599                           ;main.c: 132: PORTCbits.RC6 = 1;
   600  00E2  1707               	bsf	7,6	;volatile
   601                           
   602                           ;main.c: 133: }else {
   603  00E3  0008               	return
   604  00E4                     l133:	
   605                           
   606                           ;main.c: 135: PORTCbits.RC6 = 0;
   607  00E4  1307               	bcf	7,6	;volatile
   608                           
   609                           ;main.c: 136: }
   610                           ;main.c: 139: }
   611  00E5  0008               	return
   612  00E6                     l845:	
   613                           
   614                           ;main.c: 141: else {
   615                           ;main.c: 143: UART_Write_Text("ERROR1");
   616  00E6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   617  00E7  118A  20EA         	fcall	_UART_Write_Text
   618  00E9  0008               	return
   619  00EA                     __end_of_setHBridge:	
   620                           
   621                           	psect	text2
   622  00EA                     __ptext2:	
   623 ;; *************** function _UART_Write_Text *****************
   624 ;; Defined at:
   625 ;;		line 82 in file "uart.h"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  text            1    wreg     PTR unsigned char 
   628 ;;		 -> STR_1(7), 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  text            1    2[BANK0 ] PTR unsigned char 
   631 ;;		 -> STR_1(7), 
   632 ;;  i               2    0[BANK0 ] int 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   642 ;;      Params:         0       0       0       0
   643 ;;      Locals:         0       3       0       0
   644 ;;      Temps:          0       0       0       0
   645 ;;      Totals:         0       3       0       0
   646 ;;Total ram usage:        3 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    3
   649 ;; This function calls:
   650 ;;		_UART_Write
   651 ;; This function is called by:
   652 ;;		_setHBridge
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _UART_Write_Text
   658  00EA                     _UART_Write_Text:	
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   662                           ;UART_Write_Text@text stored from wreg
   663  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   664  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   665  00EC  00A2               	movwf	UART_Write_Text@text
   666                           
   667                           ;uart.h: 84: int i;
   668                           ;uart.h: 85: for(i=0;text[i]!='\0';i++)
   669  00ED  01A0               	clrf	UART_Write_Text@i
   670  00EE  01A1               	clrf	UART_Write_Text@i+1
   671  00EF                     l823:	
   672  00EF  0820               	movf	UART_Write_Text@i,w
   673  00F0  0722               	addwf	UART_Write_Text@text,w
   674  00F1  0084               	movwf	4
   675  00F2  118A  211B  118A   	fcall	stringdir
   676  00F5  3A00               	xorlw	0
   677  00F6  1903               	btfsc	3,2
   678  00F7  0008               	return
   679                           
   680                           ;uart.h: 86: UART_Write(text[i]);
   681  00F8  0820               	movf	UART_Write_Text@i,w
   682  00F9  0722               	addwf	UART_Write_Text@text,w
   683  00FA  0084               	movwf	4
   684  00FB  118A  211B  118A   	fcall	stringdir
   685  00FE  118A  2133  118A   	fcall	_UART_Write
   686  0101  3001               	movlw	1
   687  0102  1283               	bcf	3,5	;RP0=0, select bank0
   688  0103  1303               	bcf	3,6	;RP1=0, select bank0
   689  0104  07A0               	addwf	UART_Write_Text@i,f
   690  0105  1803               	skipnc
   691  0106  0AA1               	incf	UART_Write_Text@i+1,f
   692  0107  3000               	movlw	0
   693  0108  07A1               	addwf	UART_Write_Text@i+1,f
   694  0109  28EF               	goto	l823
   695  010A                     __end_of_UART_Write_Text:	
   696                           
   697                           	psect	text3
   698  0133                     __ptext3:	
   699 ;; *************** function _UART_Write *****************
   700 ;; Defined at:
   701 ;;		line 76 in file "uart.h"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  data            1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  data            1    6[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   715 ;;      Params:         0       0       0       0
   716 ;;      Locals:         1       0       0       0
   717 ;;      Temps:          0       0       0       0
   718 ;;      Totals:         1       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    2
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_UART_Write_Text
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _UART_Write
   731  0133                     _UART_Write:	
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _UART_Write: [wreg]
   735                           ;UART_Write@data stored from wreg
   736  0133  00F6               	movwf	UART_Write@data
   737  0134                     l99:	
   738                           ;uart.h: 78: while(!TRMT);
   739                           
   740  0134  1683               	bsf	3,5	;RP0=1, select bank1
   741  0135  1303               	bcf	3,6	;RP1=0, select bank1
   742  0136  1C98               	btfss	24,1	;volatile
   743  0137  2934               	goto	l99
   744                           
   745                           ;uart.h: 79: TXREG = data;
   746  0138  0876               	movf	UART_Write@data,w
   747  0139  1283               	bcf	3,5	;RP0=0, select bank0
   748  013A  1303               	bcf	3,6	;RP1=0, select bank0
   749  013B  0099               	movwf	25	;volatile
   750  013C  0008               	return
   751  013D                     __end_of_UART_Write:	
   752                           
   753                           	psect	text4
   754  010A                     __ptext4:	
   755 ;; *************** function _InitTimer1 *****************
   756 ;; Defined at:
   757 ;;		line 150 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   771 ;;      Params:         0       0       0       0
   772 ;;      Locals:         0       0       0       0
   773 ;;      Temps:          1       0       0       0
   774 ;;      Totals:         1       0       0       0
   775 ;;Total ram usage:        1 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    2
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _InitTimer1
   787  010A                     _InitTimer1:	
   788                           
   789                           ;main.c: 151: T1CON = 0x01;
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in _InitTimer1: [wreg+status,2+status,0]
   793  010A  3001               	movlw	1
   794  010B  1283               	bcf	3,5	;RP0=0, select bank0
   795  010C  1303               	bcf	3,6	;RP1=0, select bank0
   796  010D  0090               	movwf	16	;volatile
   797                           
   798                           ;main.c: 152: TMR1IF = 0;
   799  010E  100C               	bcf	12,0	;volatile
   800                           
   801                           ;main.c: 153: TMR1H = 0xFF;
   802  010F  30FF               	movlw	255
   803  0110  008F               	movwf	15	;volatile
   804                           
   805                           ;main.c: 154: TMR1L = 0x38;
   806  0111  3038               	movlw	56
   807  0112  008E               	movwf	14	;volatile
   808                           
   809                           ;main.c: 155: TMR1IE = 1;
   810  0113  1683               	bsf	3,5	;RP0=1, select bank1
   811  0114  1303               	bcf	3,6	;RP1=0, select bank1
   812  0115  140C               	bsf	12,0	;volatile
   813                           
   814                           ;main.c: 156: INTCON |= 0xC0;
   815  0116  30C0               	movlw	192
   816  0117  00F6               	movwf	??_InitTimer1
   817  0118  0876               	movf	??_InitTimer1,w
   818  0119  048B               	iorwf	11,f	;volatile
   819  011A  0008               	return
   820  011B                     __end_of_InitTimer1:	
   821                           
   822                           	psect	text5
   823  0128                     __ptext5:	
   824 ;; *************** function _InitTimer0 *****************
   825 ;; Defined at:
   826 ;;		line 162 in file "main.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   840 ;;      Params:         0       0       0       0
   841 ;;      Locals:         0       0       0       0
   842 ;;      Temps:          0       0       0       0
   843 ;;      Totals:         0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    2
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _InitTimer0
   856  0128                     _InitTimer0:	
   857                           
   858                           ;main.c: 163: OPTION_REG = 0x81;
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _InitTimer0: [wreg]
   862  0128  3081               	movlw	129
   863  0129  1683               	bsf	3,5	;RP0=1, select bank1
   864  012A  1303               	bcf	3,6	;RP1=0, select bank1
   865  012B  0081               	movwf	1	;volatile
   866                           
   867                           ;main.c: 164: TMR0 = 56;
   868  012C  3038               	movlw	56
   869  012D  1283               	bcf	3,5	;RP0=0, select bank0
   870  012E  1303               	bcf	3,6	;RP1=0, select bank0
   871  012F  0081               	movwf	1	;volatile
   872                           
   873                           ;main.c: 165: INTCON = 0xA0;
   874  0130  30A0               	movlw	160
   875  0131  008B               	movwf	11	;volatile
   876  0132  0008               	return
   877  0133                     __end_of_InitTimer0:	
   878                           
   879                           	psect	text6
   880  0076                     __ptext6:	
   881 ;; *************** function _tc_int *****************
   882 ;; Defined at:
   883 ;;		line 63 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   897 ;;      Params:         0       0       0       0
   898 ;;      Locals:         0       0       0       0
   899 ;;      Temps:          5       0       0       0
   900 ;;      Totals:         5       0       0       0
   901 ;;Total ram usage:        5 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    1
   904 ;; This function calls:
   905 ;;		i1_UART_Write
   906 ;; This function is called by:
   907 ;;		Interrupt level 1
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _tc_int
   913  0076                     _tc_int:	
   914                           
   915                           ;main.c: 64: if (T0IF){
   916  0076  1D0B               	btfss	11,2	;volatile
   917  0077  2883               	goto	i1l117
   918                           
   919                           ;main.c: 66: T0IF = 0;
   920  0078  110B               	bcf	11,2	;volatile
   921                           
   922                           ;main.c: 67: TMR0 = 56;
   923  0079  3038               	movlw	56
   924  007A  0081               	movwf	1	;volatile
   925                           
   926                           ;main.c: 70: TMR1IF = 0;
   927  007B  100C               	bcf	12,0	;volatile
   928                           
   929                           ;main.c: 71: TMR1H = 0xFf;
   930  007C  30FF               	movlw	255
   931  007D  008F               	movwf	15	;volatile
   932                           
   933                           ;main.c: 72: TMR1L = 0x38;
   934  007E  3038               	movlw	56
   935  007F  008E               	movwf	14	;volatile
   936                           
   937                           ;main.c: 73: TMR1ON = 1;
   938  0080  1410               	bsf	16,0	;volatile
   939                           
   940                           ;main.c: 75: PORTCbits.RC1 = 1;
   941  0081  1487               	bsf	7,1	;volatile
   942                           
   943                           ;main.c: 77: }
   944  0082  28A8               	goto	i1l125
   945  0083                     i1l117:	
   946                           
   947                           ;main.c: 78: else if (TMR1IF){
   948  0083  1C0C               	btfss	12,0	;volatile
   949  0084  2889               	goto	i1l119
   950                           
   951                           ;main.c: 79: TMR1IF = 0;
   952  0085  100C               	bcf	12,0	;volatile
   953                           
   954                           ;main.c: 80: TMR1ON = 0;
   955  0086  1010               	bcf	16,0	;volatile
   956                           
   957                           ;main.c: 83: PORTCbits.RC1 = 0;
   958  0087  1087               	bcf	7,1	;volatile
   959                           
   960                           ;main.c: 85: } else if(RCIF){
   961  0088  28A8               	goto	i1l125
   962  0089                     i1l119:	
   963  0089  1E8C               	btfss	12,5	;volatile
   964  008A  28A8               	goto	i1l125
   965                           
   966                           ;main.c: 86: i = 0;
   967  008B  01AA               	clrf	_i
   968  008C  01AB               	clrf	_i+1
   969  008D                     i1l881:	
   970                           ;main.c: 87: while(RCIF)
   971                           
   972  008D  1E8C               	btfss	12,5	;volatile
   973  008E  289E               	goto	i1l124
   974                           
   975                           ;main.c: 88: {
   976                           ;main.c: 89: receivedData[i] = RCREG;
   977  008F  081A               	movf	26,w	;volatile
   978  0090  00F1               	movwf	??_tc_int
   979  0091  082A               	movf	_i,w
   980  0092  3E26               	addlw	(low (_receivedData| 0))& (0+255)
   981  0093  0084               	movwf	4
   982  0094  0871               	movf	??_tc_int,w
   983  0095  1383               	bcf	3,7	;select IRP bank0
   984  0096  0080               	movwf	0
   985                           
   986                           ;main.c: 90: i++;
   987  0097  3001               	movlw	1
   988  0098  07AA               	addwf	_i,f
   989  0099  1803               	skipnc
   990  009A  0AAB               	incf	_i+1,f
   991  009B  3000               	movlw	0
   992  009C  07AB               	addwf	_i+1,f
   993  009D  288D               	goto	i1l881
   994  009E                     i1l124:	
   995                           
   996                           ;main.c: 91: }
   997                           ;main.c: 92: newData = 1;
   998  009E  01AC               	clrf	_newData
   999  009F  0AAC               	incf	_newData,f
  1000                           
  1001                           ;main.c: 93: UART_Write(i);
  1002  00A0  082A               	movf	_i,w
  1003  00A1  118A  213D  118A   	fcall	i1_UART_Write
  1004                           
  1005                           ;main.c: 94: i=0;
  1006  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1007  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1008  00A6  01AA               	clrf	_i
  1009  00A7  01AB               	clrf	_i+1
  1010  00A8                     i1l125:	
  1011  00A8  0875               	movf	??_tc_int+4,w
  1012  00A9  00FF               	movwf	127
  1013  00AA  0874               	movf	??_tc_int+3,w
  1014  00AB  008A               	movwf	10
  1015  00AC  0873               	movf	??_tc_int+2,w
  1016  00AD  0084               	movwf	4
  1017  00AE  0E72               	swapf	(??_tc_int+1)^(0+-128),w
  1018  00AF  0083               	movwf	3
  1019  00B0  0EFE               	swapf	126,f
  1020  00B1  0E7E               	swapf	126,w
  1021  00B2  0009               	retfie
  1022  00B3                     __end_of_tc_int:	
  1023                           
  1024                           	psect	intentry
  1025  0004                     __pintentry:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1028                           
  1029  0004                     interrupt_function:	
  1030  007E                     saved_w	set	btemp
  1031  0004  00FE               	movwf	btemp
  1032  0005  0E03               	swapf	3,w
  1033  0006  00F2               	movwf	??_tc_int+1
  1034  0007  0804               	movf	4,w
  1035  0008  00F3               	movwf	??_tc_int+2
  1036  0009  080A               	movf	10,w
  1037  000A  00F4               	movwf	??_tc_int+3
  1038  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1039  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1040  000D  087F               	movf	btemp+1,w
  1041  000E  00F5               	movwf	??_tc_int+4
  1042  000F  118A  2876         	ljmp	_tc_int
  1043                           
  1044                           	psect	text7
  1045  013D                     __ptext7:	
  1046 ;; *************** function i1_UART_Write *****************
  1047 ;; Defined at:
  1048 ;;		line 76 in file "uart.h"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  data            1    wreg     unsigned char 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  data            1    0[COMMON] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1062 ;;      Params:         0       0       0       0
  1063 ;;      Locals:         1       0       0       0
  1064 ;;      Temps:          0       0       0       0
  1065 ;;      Totals:         1       0       0       0
  1066 ;;Total ram usage:        1 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_tc_int
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function i1_UART_Write
  1077  013D                     i1_UART_Write:	
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in i1_UART_Write: [wreg]
  1081                           ;i1UART_Write@data stored from wreg
  1082  013D  00F0               	movwf	i1UART_Write@data
  1083  013E                     i1l99:	
  1084                           ;uart.h: 78: while(!TRMT);
  1085                           
  1086  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1087  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1088  0140  1C98               	btfss	24,1	;volatile
  1089  0141  293E               	goto	i1l99
  1090                           
  1091                           ;uart.h: 79: TXREG = data;
  1092  0142  0870               	movf	i1UART_Write@data,w
  1093  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0145  0099               	movwf	25	;volatile
  1096  0146  0008               	return
  1097  0147                     __end_ofi1_UART_Write:	
  1098  007E                     btemp	set	126	;btemp
  1099  007E                     wtemp	set	126
  1100  007E                     wtemp0	set	126
  1101  0080                     wtemp1	set	128
  1102  0082                     wtemp2	set	130
  1103  0084                     wtemp3	set	132
  1104  0086                     wtemp4	set	134
  1105  0088                     wtemp5	set	136
  1106  007F                     wtemp6	set	127
  1107  007E                     ttemp	set	126
  1108  007E                     ttemp0	set	126
  1109  0081                     ttemp1	set	129
  1110  0084                     ttemp2	set	132
  1111  0087                     ttemp3	set	135
  1112  007F                     ttemp4	set	127
  1113  007E                     ltemp	set	126
  1114  007E                     ltemp0	set	126
  1115  0082                     ltemp1	set	130
  1116  0086                     ltemp2	set	134
  1117  0080                     ltemp3	set	128


Data Sizes:
    Strings     7
    Constant    0
    Data        4
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      6      13
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_setHBridge
    _UART_Write_Text->_UART_Write

Critical Paths under _tc_int in COMMON

    _tc_int->i1_UART_Write

Critical Paths under _main in BANK0

    _setHBridge->_UART_Write_Text

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     142
                                              3 BANK0      3     3      0
                         _InitTimer0
                         _InitTimer1
                         _setHBridge
 ---------------------------------------------------------------------------------
 (1) _setHBridge                                           1     1      0     142
                                              7 COMMON     1     1      0
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      3     3      0     142
                                              0 BANK0      3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tc_int                                               5     5      0      22
                                              1 COMMON     5     5      0
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitTimer0
   _InitTimer1
   _setHBridge
     _UART_Write_Text
       _UART_Write

 _tc_int (ROOT)
   i1_UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       D       3       16.3%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      10        0.0%
ABS                  0      0      15       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Feb 08 05:47:32 2017

                       _i 002A                         pc 0002               __CFG_CP$OFF 0000  
                      l99 0134                        fsr 0004                       l130 00CC  
                     l133 00E4                       l134 00E0                       l129 00D0  
                     l147 0058                       l823 00EF                       l921 0059  
                     l837 00D1                       l845 00E6                       l933 006A  
                     _GIE 005F                       u345 00C0              __CFG_CPD$OFF 0000  
                     u507 005F                       u517 0067                       u375 00D4  
                     u497 003F                       fsr0 0004                       indf 0000  
            __CFG_IESO$ON 0000              __CFG_FOSC$HS 0000                      STR_1 0121  
                    _BRGH 04C2                      _T0IF 005A                      _CREN 00C4  
                    _RCIE 0465                      _RCIF 0065                      i1l99 013E  
                    _TMR0 0001                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4             __CFG_FCMEN$ON 0000  
                    _main 0028                      btemp 007E             __CFG_BOREN$ON 0000  
                    ltemp 007E                      start 0011                      ttemp 007E  
                    wtemp 007E             __CFG_MCLRE$ON 0000   __end_of_UART_Write_Text 010A  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 011E  
                   _T1CON 0010                     i1l124 009E                     i1l125 00A8  
                   i1l117 0083                     i1l119 0089                     i1l881 008D  
                   _RCREG 001A                     _TMR1H 000F                     _TMR1L 000E  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TXREG 0019               ?_UART_Write 0070  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 0013                _InitTimer0 0128                _InitTimer1 010A  
            __end_of_main 0076                    ??_main 0023                    _INTCON 000B  
                  _TMR1IE 0460                    _TMR1IF 0060                    _TMR1ON 0080  
                  _TRISC6 043E                    _TRISC7 043F            __CFG_PWRTE$OFF 0000  
     __size_of_UART_Write 000A          ?_UART_Write_Text 0070                    _tc_int 0076  
                  saved_w 007E   __end_of__initialization 0025             ?i1_UART_Write 0070  
             ?_InitTimer0 0070               ?_InitTimer1 0070            __pcstackCOMMON 0070  
            __pidataBANK0 0147                __pbssBANK0 002A            ??i1_UART_Write 0070  
              __pmaintext 0028                __pintentry 0004                   ?_tc_int 0070  
            ??_UART_Write 0076       __size_of_InitTimer0 000B       __size_of_InitTimer1 0011  
              __stringtab 011B        __end_of_UART_Write 013D           __size_of_tc_int 003D  
                 __ptext1 00B3                   __ptext2 00EA                   __ptext3 0133  
                 __ptext4 010A                   __ptext5 0128                   __ptext6 0076  
                 __ptext7 013D                _setHBridge 00B3                   _newData 002C  
    end_of_initialization 0025                 _PORTAbits 0005                 _PORTCbits 0007  
          UART_Write@data 0076      __end_ofi1_UART_Write 0147              ??_InitTimer0 0076  
            ??_InitTimer1 0076            __end_of_tc_int 00B3               ?_setHBridge 0070  
__size_of_UART_Write_Text 0020       start_initialization 0013        __end_of_InitTimer0 0133  
      __end_of_InitTimer1 011B               __pdataBANK0 0026                  ??_tc_int 0071  
               ___latbits 0001             __pcstackBANK0 0020       __size_of_setHBridge 0037  
               __pstrings 011B     __size_ofi1_UART_Write 000A         ??_UART_Write_Text 0077  
            _receivedData 0026         interrupt_function 0004              i1_UART_Write 013D  
              _ADCON0bits 001F               __stringbase 0120          i1UART_Write@data 0070  
      __end_of__stringtab 0121              ??_setHBridge 0077       UART_Write_Text@text 0022  
           __size_of_main 004E        __end_of_setHBridge 00EA                  intlevel1 0000  
               stringcode 011B           _UART_Write_Text 00EA                _OPTION_REG 0081  
                stringdir 011B                  stringtab 011B                _UART_Write 0133  
        UART_Write_Text@i 0020  
